#if INTEL_COLLAB
//==--- Intel_Directives.cpp - Table of directives and clauses -*- C++ -*---==//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// ===--------------------------------------------------------------------=== //
///
/// \file
/// This file builds tables of directives and clauses used for parallelization
/// and vectorization. The enums/tables are used to create Metadata that are
/// passed as call arguments to intrinsics. These intrinsics represent things
/// like the beginning and end of vector/parallel regions, specifying variable
/// attributes like private, shared, etc. The enumerations and tables are
/// automatically generated by a TableGen backend.
///
/// See llvm/utils/TableGen/Intel_DirectivesEmitter.cpp
///
// ===--------------------------------------------------------------------=== //

#include "llvm/Analysis/Intel_Directives.h"
#include "llvm/ADT/StringMap.h"
#include "llvm/ADT/StringRef.h"
#include "llvm/Support/Debug.h"
#include <unordered_map>

using namespace llvm;

std::unordered_map<int, StringRef> IntelDirectives::DirectiveStrings = {
#define GET_DIRECTIVES_STRINGS_TABLE
#include "llvm/IR/Intel_Directives.gen"
  { DIR_QUAL_LIST_END,
    "DIR.QUAL.LIST.END" } };
#undef GET_DIRECTIVES_STRINGS_TABLE

std::unordered_map<int, StringRef> IntelDirectives::ClauseStrings = {
#define GET_CLAUSES_STRINGS_TABLE
#include "llvm/IR/Intel_Directives.gen"
  { QUAL_LIST_END,
    "DIR.QUAL.LIST.END" } };
#undef GET_CLAUSES_STRINGS_TABLE

StringMap<int> IntelDirectives::DirectiveIDs = {
#define GET_DIRECTIVES_IDS_TABLE
#include "llvm/IR/Intel_Directives.gen"
  { "DIR.QUAL.LIST.END",
    DIR_QUAL_LIST_END } };
#undef GET_DIRECTIVES_IDS_TABLE

StringMap<int> IntelDirectives::ClauseIDs = {
#define GET_CLAUSES_IDS_TABLE
#include "llvm/IR/Intel_Directives.gen"
  { "DIR.QUAL.LIST.END",
    QUAL_LIST_END } };
#undef GET_CLAUSES_IDS_TABLE
#endif // INTEL_COLLAB
