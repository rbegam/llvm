//= CSAInstPrinter.h - Convert CSA MCInst to assembly syntax -------*- C++ -*-//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a CSA MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_CSA_INSTPRINTER_CSAINSTPRINTER_H
#define LLVM_LIB_TARGET_CSA_INSTPRINTER_CSAINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
  class MCOperand;

  class CSAInstPrinter : public MCInstPrinter {
    virtual void anchor();
  public:
    CSAInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
		   const MCRegisterInfo &MRI);

    void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
            const MCSubtargetInfo &STI) override;

    static bool WrapCsaAsm();
    static const char *WrapCsaAsmLinePrefix();
    static const char *WrapCsaAsmLineSuffix();

    // Autogenerated by tblgen.
    void printInstruction(const MCInst *MI, raw_ostream &O);
    static const char *getRegisterName(unsigned RegNo);

    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                      const char *Modifier = nullptr);
    void printMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                      const char *Modifier = nullptr);

    void printUnitOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                          const char* Modifier = nullptr);

    void printRModeOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                           const char* Modifier = nullptr);

    void printMemLvlOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                            const char* Modifier = nullptr);

    //    void printPCRelImmOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
    //    void printSrcMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
    //                            const char *Modifier = nullptr);
    //    void printCCOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  };
}

#endif
