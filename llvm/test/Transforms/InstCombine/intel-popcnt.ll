; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instcombine -S | FileCheck %s

target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @PopCount64(i64) local_unnamed_addr #0 {
; CHECK-LABEL: @PopCount64(
; CHECK-NEXT:    [[TMP2:%.*]] = call i64 @llvm.ctpop.i64(i64 [[TMP0:%.*]]), !range !0
; CHECK-NEXT:    ret i64 [[TMP2]]
;
  %2 = lshr i64 %0, 1
  %3 = and i64 %2, 6148914691236517205
  %4 = sub i64 %0, %3
  %5 = lshr i64 %4, 2
  %6 = and i64 %5, 3689348814741910323
  %7 = and i64 %4, 3689348814741910323
  %8 = add nuw nsw i64 %6, %7
  %9 = lshr i64 %8, 4
  %10 = add nuw nsw i64 %9, %8
  %11 = and i64 %10, 1085102592571150095
  %12 = mul i64 %11, 72340172838076673
  %13 = lshr i64 %12, 56
  ret i64 %13
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @PopCount32(i32) local_unnamed_addr #0 {
; CHECK-LABEL: @PopCount32(
; CHECK-NEXT:    [[TMP2:%.*]] = call i32 @llvm.ctpop.i32(i32 [[TMP0:%.*]]), !range !1
; CHECK-NEXT:    ret i32 [[TMP2]]
;
  %2 = lshr i32 %0, 1
  %3 = and i32 %2, 1431655765
  %4 = sub i32 %0, %3
  %5 = lshr i32 %4, 2
  %6 = and i32 %5, 858993459
  %7 = and i32 %4, 858993459
  %8 = add nuw nsw i32 %6, %7
  %9 = lshr i32 %8, 4
  %10 = add nuw nsw i32 %9, %8
  %11 = and i32 %10, 252645135
  %12 = mul i32 %11, 16843009
  %13 = lshr i32 %12, 24
  ret i32 %13
}

; The following 2 tests check that we recognize popcnt regardless
;   to order of add arguments in:
; %8 = add nuw nsw i64 %6, %7
;   and
; %10 = add nuw nsw i64 %9, %8

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @PopCount64_add_switch1(i64) local_unnamed_addr #0 {
; CHECK-LABEL: @PopCount64_add_switch1(
; CHECK-NEXT:    [[TMP2:%.*]] = call i64 @llvm.ctpop.i64(i64 [[TMP0:%.*]]), !range !0
; CHECK-NEXT:    ret i64 [[TMP2]]
;
  %2 = lshr i64 %0, 1
  %3 = and i64 %2, 6148914691236517205
  %4 = sub i64 %0, %3
  %5 = lshr i64 %4, 2
  %6 = and i64 %5, 3689348814741910323
  %7 = and i64 %4, 3689348814741910323
  %8 = add nuw nsw i64 %7, %6
  %9 = lshr i64 %8, 4
  %10 = add nuw nsw i64 %9, %8
  %11 = and i64 %10, 1085102592571150095
  %12 = mul i64 %11, 72340172838076673
  %13 = lshr i64 %12, 56
  ret i64 %13
}

; Function Attrs: norecurse nounwind readnone uwtable
define i64 @PopCount64_add_switch2(i64) local_unnamed_addr #0 {
; CHECK-LABEL: @PopCount64_add_switch2(
; CHECK-NEXT:    [[TMP2:%.*]] = call i64 @llvm.ctpop.i64(i64 [[TMP0:%.*]]), !range !0
; CHECK-NEXT:    ret i64 [[TMP2]]
;
  %2 = lshr i64 %0, 1
  %3 = and i64 %2, 6148914691236517205
  %4 = sub i64 %0, %3
  %5 = lshr i64 %4, 2
  %6 = and i64 %5, 3689348814741910323
  %7 = and i64 %4, 3689348814741910323
  %8 = add nuw nsw i64 %7, %6
  %9 = lshr i64 %8, 4
  %10 = add nuw nsw i64 %8, %9
  %11 = and i64 %10, 1085102592571150095
  %12 = mul i64 %11, 72340172838076673
  %13 = lshr i64 %12, 56
  ret i64 %13
}
