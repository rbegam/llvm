# RUN: llc -run-pass=csa-opt-seqot-to-seq -debug-only=csa-opt-seqot-to-seq -o /dev/null %s 2>&1 | FileCheck %s
# vgh_inner kernel from QMCPack

# NOTE: register class of the return value %17 in MIR was adjusted manually
#       from ri1 to ci0 to make the MachineVerifier happy.

# NOTE: FileCheck rules must be commented with # to make llc happy.
#; CHECK: BEGIN: SEQOT->SEQ opt.
#; CHECK: Initial candidate for SEQOT->SEQ opt:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: SUCCESS: the pattern has been recognized.
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming SEQOT:
#; CHECK: END: SEQOT->SEQ opt.

--- |
  ; ModuleID = 'inner_loop.cpp'
  source_filename = "inner_loop.cpp"
  target datalayout = "e-m:e-i64:64-n32:64"
  target triple = "csa"
  
  ; Function Attrs: nounwind uwtable
  define dso_local void @_Z9vgh_inneriddddddPdS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_(i32 %num_splines, double %pre20, double %pre10, double %pre00, double %pre11, double %pre01, double %pre02, double* noalias nocapture readonly %coefs, double* noalias nocapture readonly %coefszs, double* noalias nocapture readonly %coefs2zs, double* noalias nocapture readonly %coefs3zs, double* noalias nocapture readonly %c, double* noalias nocapture readonly %dc, double* noalias nocapture readonly %d2c, double* noalias nocapture %hxx, double* noalias nocapture %hxy, double* noalias nocapture %hxz, double* noalias nocapture %hyy, double* noalias nocapture %hyz, double* noalias nocapture %hzz, double* noalias nocapture %gx, double* noalias nocapture %gy, double* noalias nocapture %gz, double* noalias nocapture %vals) local_unnamed_addr #0 {
  entry:
    %clie_pre = tail call i32 @llvm.csa.parallel.region.entry(i32 1032)
    %cmp130 = icmp sgt i32 %num_splines, 0
    br i1 %cmp130, label %for.body.preheader, label %for.cond.cleanup
  
  for.body.preheader:                               ; preds = %entry
    %arrayidx35 = getelementptr inbounds double, double* %d2c, i64 3
    %arrayidx32 = getelementptr inbounds double, double* %d2c, i64 2
    %arrayidx29 = getelementptr inbounds double, double* %d2c, i64 1
    %arrayidx24 = getelementptr inbounds double, double* %dc, i64 3
    %arrayidx21 = getelementptr inbounds double, double* %dc, i64 2
    %arrayidx18 = getelementptr inbounds double, double* %dc, i64 1
    %arrayidx13 = getelementptr inbounds double, double* %c, i64 3
    %arrayidx10 = getelementptr inbounds double, double* %c, i64 2
    %arrayidx8 = getelementptr inbounds double, double* %c, i64 1
    %wide.trip.count = sext i32 %num_splines to i64
    %gepload = load double, double* %c, align 8, !tbaa !3
    %gepload143 = load double, double* %arrayidx8, align 8, !tbaa !3
    %gepload145 = load double, double* %arrayidx10, align 8, !tbaa !3
    %gepload147 = load double, double* %arrayidx13, align 8, !tbaa !3
    %gepload148 = load double, double* %dc, align 8, !tbaa !3
    %gepload150 = load double, double* %arrayidx18, align 8, !tbaa !3
    %gepload152 = load double, double* %arrayidx21, align 8, !tbaa !3
    %gepload154 = load double, double* %arrayidx24, align 8, !tbaa !3
    %gepload155 = load double, double* %d2c, align 8, !tbaa !3
    %gepload157 = load double, double* %arrayidx29, align 8, !tbaa !3
    %gepload159 = load double, double* %arrayidx32, align 8, !tbaa !3
    %gepload161 = load double, double* %arrayidx35, align 8, !tbaa !3
    %0 = add nsw i64 %wide.trip.count, -1
    br label %loop.101
  
  for.cond.cleanup.loopexit:                        ; preds = %loop.101
    br label %for.cond.cleanup
  
  for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
    tail call void @llvm.csa.parallel.region.exit(i32 %clie_pre)
    ret void
  
  loop.101:                                         ; preds = %loop.101, %for.body.preheader
    %lsr.iv = phi i64 [ %lsr.iv.next, %loop.101 ], [ -1, %for.body.preheader ]
    %1 = tail call i32 @llvm.csa.parallel.section.entry(i32 %clie_pre)
    %scevgep264 = getelementptr double, double* %coefs, i64 1
    %scevgep265 = getelementptr double, double* %scevgep264, i64 %lsr.iv
    %gepload163 = load double, double* %scevgep265, align 8, !tbaa !3
    %scevgep262 = getelementptr double, double* %coefszs, i64 1
    %scevgep263 = getelementptr double, double* %scevgep262, i64 %lsr.iv
    %gepload165 = load double, double* %scevgep263, align 8, !tbaa !3
    %scevgep260 = getelementptr double, double* %coefs2zs, i64 1
    %scevgep261 = getelementptr double, double* %scevgep260, i64 %lsr.iv
    %gepload167 = load double, double* %scevgep261, align 8, !tbaa !3
    %scevgep258 = getelementptr double, double* %coefs3zs, i64 1
    %scevgep259 = getelementptr double, double* %scevgep258, i64 %lsr.iv
    %gepload169 = load double, double* %scevgep259, align 8, !tbaa !3
    %2 = fmul contract double %gepload163, %gepload
    %3 = fmul contract double %gepload165, %gepload143
    %4 = fadd contract double %2, %3
    %5 = fmul contract double %gepload167, %gepload145
    %6 = fadd contract double %4, %5
    %7 = fmul contract double %gepload169, %gepload147
    %8 = fadd contract double %6, %7
    %9 = fmul contract double %gepload163, %gepload148
    %10 = fmul contract double %gepload165, %gepload150
    %11 = fadd contract double %9, %10
    %12 = fmul contract double %gepload167, %gepload152
    %13 = fadd contract double %11, %12
    %14 = fmul contract double %gepload169, %gepload154
    %15 = fadd contract double %13, %14
    %16 = fmul contract double %gepload163, %gepload155
    %17 = fmul contract double %gepload165, %gepload157
    %18 = fadd contract double %16, %17
    %19 = fmul contract double %gepload167, %gepload159
    %20 = fadd contract double %18, %19
    %21 = fmul contract double %gepload169, %gepload161
    %22 = fadd contract double %20, %21
    %23 = fmul contract double %8, %pre20
    %scevgep256 = getelementptr double, double* %hxx, i64 1
    %scevgep257 = getelementptr double, double* %scevgep256, i64 %lsr.iv
    %gepload179 = load double, double* %scevgep257, align 8, !tbaa !3
    %24 = fadd contract double %23, %gepload179
    store double %24, double* %scevgep257, align 8, !tbaa !3
    %25 = fmul contract double %8, %pre11
    %scevgep254 = getelementptr double, double* %hxy, i64 1
    %scevgep255 = getelementptr double, double* %scevgep254, i64 %lsr.iv
    %gepload183 = load double, double* %scevgep255, align 8, !tbaa !3
    %26 = fadd contract double %25, %gepload183
    store double %26, double* %scevgep255, align 8, !tbaa !3
    %27 = fmul contract double %15, %pre10
    %scevgep252 = getelementptr double, double* %hxz, i64 1
    %scevgep253 = getelementptr double, double* %scevgep252, i64 %lsr.iv
    %gepload186 = load double, double* %scevgep253, align 8, !tbaa !3
    %28 = fadd contract double %27, %gepload186
    store double %28, double* %scevgep253, align 8, !tbaa !3
    %29 = fmul contract double %8, %pre02
    %scevgep250 = getelementptr double, double* %hyy, i64 1
    %scevgep251 = getelementptr double, double* %scevgep250, i64 %lsr.iv
    %gepload190 = load double, double* %scevgep251, align 8, !tbaa !3
    %30 = fadd contract double %29, %gepload190
    store double %30, double* %scevgep251, align 8, !tbaa !3
    %31 = fmul contract double %15, %pre01
    %scevgep248 = getelementptr double, double* %hyz, i64 1
    %scevgep249 = getelementptr double, double* %scevgep248, i64 %lsr.iv
    %gepload194 = load double, double* %scevgep249, align 8, !tbaa !3
    %32 = fadd contract double %31, %gepload194
    store double %32, double* %scevgep249, align 8, !tbaa !3
    %33 = fmul contract double %22, %pre00
    %scevgep246 = getelementptr double, double* %hzz, i64 1
    %scevgep247 = getelementptr double, double* %scevgep246, i64 %lsr.iv
    %gepload197 = load double, double* %scevgep247, align 8, !tbaa !3
    %34 = fadd contract double %33, %gepload197
    store double %34, double* %scevgep247, align 8, !tbaa !3
    %35 = fmul contract double %8, %pre10
    %scevgep244 = getelementptr double, double* %gx, i64 1
    %scevgep245 = getelementptr double, double* %scevgep244, i64 %lsr.iv
    %gepload201 = load double, double* %scevgep245, align 8, !tbaa !3
    %36 = fadd contract double %35, %gepload201
    store double %36, double* %scevgep245, align 8, !tbaa !3
    %37 = fmul contract double %8, %pre01
    %scevgep242 = getelementptr double, double* %gy, i64 1
    %scevgep243 = getelementptr double, double* %scevgep242, i64 %lsr.iv
    %gepload205 = load double, double* %scevgep243, align 8, !tbaa !3
    %38 = fadd contract double %37, %gepload205
    store double %38, double* %scevgep243, align 8, !tbaa !3
    %39 = fmul contract double %15, %pre00
    %scevgep240 = getelementptr double, double* %gz, i64 1
    %scevgep241 = getelementptr double, double* %scevgep240, i64 %lsr.iv
    %gepload209 = load double, double* %scevgep241, align 8, !tbaa !3
    %40 = fadd contract double %39, %gepload209
    store double %40, double* %scevgep241, align 8, !tbaa !3
    %41 = fmul contract double %8, %pre00
    %scevgep = getelementptr double, double* %vals, i64 1
    %scevgep239 = getelementptr double, double* %scevgep, i64 %lsr.iv
    %gepload213 = load double, double* %scevgep239, align 8, !tbaa !3
    %42 = fadd contract double %41, %gepload213
    store double %42, double* %scevgep239, align 8, !tbaa !3
    tail call void @llvm.csa.parallel.section.exit(i32 %1)
    %lsr.iv.next = add nsw i64 %lsr.iv, 1
    %condloop.101 = icmp slt i64 %lsr.iv.next, %0
    br i1 %condloop.101, label %loop.101, label %for.cond.cleanup.loopexit
  }
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare i32 @llvm.csa.parallel.region.entry(i32) #1
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare void @llvm.csa.parallel.region.exit(i32) #1
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare i32 @llvm.csa.parallel.section.entry(i32) #1
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare void @llvm.csa.parallel.section.exit(i32) #1
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #2
  
  attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { inaccessiblemem_or_argmemonly nounwind }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 8.0.0 (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-clang 53ef909f6145cef0d136b38ab35f7f0bd8cb7078) (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-llvm 910a0ae26f4da5a36bc27231c3f363d205a2daaf)"}
  !2 = !{!"clang version 8.0.0 (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-clang 53ef909f6145cef0d136b38ab35f7f0bd8cb7078) (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-llvm d26bb6e3270385a47365721fcd88679b193b71e6)"}
  !3 = !{!4, !4, i64 0}
  !4 = !{!"double", !5, i64 0}
  !5 = !{!"omnipotent char", !6, i64 0}
  !6 = !{!"Simple C++ TBAA"}

...
---
name:            _Z9vgh_inneriddddddPdS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_
alignment:       0
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
registers:       
  - { id: 0, class: i32, preferred-register: '' }
  - { id: 1, class: i64, preferred-register: '' }
  - { id: 2, class: i64, preferred-register: '' }
  - { id: 3, class: i64, preferred-register: '' }
  - { id: 4, class: i64, preferred-register: '' }
  - { id: 5, class: i64, preferred-register: '' }
  - { id: 6, class: i64, preferred-register: '' }
  - { id: 7, class: i64, preferred-register: '' }
  - { id: 8, class: i64, preferred-register: '' }
  - { id: 9, class: i64, preferred-register: '' }
  - { id: 10, class: i64, preferred-register: '' }
  - { id: 11, class: i64, preferred-register: '' }
  - { id: 12, class: i64, preferred-register: '' }
  - { id: 13, class: ci64, preferred-register: '' }
  - { id: 14, class: ci64, preferred-register: '' }
  - { id: 15, class: ci64, preferred-register: '' }
  - { id: 16, class: ci0, preferred-register: '' }
  - { id: 17, class: ci0, preferred-register: '' }
  - { id: 18, class: ci64, preferred-register: '' }
  - { id: 19, class: ci64, preferred-register: '' }
  - { id: 20, class: ci64, preferred-register: '' }
  - { id: 21, class: ci64, preferred-register: '' }
  - { id: 22, class: ci64, preferred-register: '' }
  - { id: 23, class: ci64, preferred-register: '' }
  - { id: 24, class: ci64, preferred-register: '' }
  - { id: 25, class: ci64, preferred-register: '' }
  - { id: 26, class: ci64, preferred-register: '' }
  - { id: 27, class: ci64, preferred-register: '' }
  - { id: 28, class: ci64, preferred-register: '' }
  - { id: 29, class: ci64, preferred-register: '' }
  - { id: 30, class: ci64, preferred-register: '' }
  - { id: 31, class: ci64, preferred-register: '' }
  - { id: 32, class: ci64, preferred-register: '' }
  - { id: 33, class: ci64, preferred-register: '' }
  - { id: 34, class: ci64, preferred-register: '' }
  - { id: 35, class: ci64, preferred-register: '' }
  - { id: 36, class: ci64, preferred-register: '' }
  - { id: 37, class: ci64, preferred-register: '' }
  - { id: 38, class: ci64, preferred-register: '' }
  - { id: 39, class: ci64, preferred-register: '' }
  - { id: 40, class: ci64, preferred-register: '' }
  - { id: 41, class: ci64, preferred-register: '' }
  - { id: 42, class: ci1, preferred-register: '' }
  - { id: 43, class: ci64, preferred-register: '' }
  - { id: 44, class: ci64, preferred-register: '' }
  - { id: 45, class: ci64, preferred-register: '' }
  - { id: 46, class: ci64, preferred-register: '' }
  - { id: 47, class: ci64, preferred-register: '' }
  - { id: 48, class: ci64, preferred-register: '' }
  - { id: 49, class: ci64, preferred-register: '' }
  - { id: 50, class: ci64, preferred-register: '' }
  - { id: 51, class: ci64, preferred-register: '' }
  - { id: 52, class: ci64, preferred-register: '' }
  - { id: 53, class: ci64, preferred-register: '' }
  - { id: 54, class: ci64, preferred-register: '' }
  - { id: 55, class: ci64, preferred-register: '' }
  - { id: 56, class: ci64, preferred-register: '' }
  - { id: 57, class: ci64, preferred-register: '' }
  - { id: 58, class: ci64, preferred-register: '' }
  - { id: 59, class: ci64, preferred-register: '' }
  - { id: 60, class: ci64, preferred-register: '' }
  - { id: 61, class: ci64, preferred-register: '' }
  - { id: 62, class: ci64, preferred-register: '' }
  - { id: 63, class: ci64, preferred-register: '' }
  - { id: 64, class: ci64, preferred-register: '' }
  - { id: 65, class: ci64, preferred-register: '' }
  - { id: 66, class: ci64, preferred-register: '' }
  - { id: 67, class: ci64, preferred-register: '' }
  - { id: 68, class: i64, preferred-register: '' }
  - { id: 69, class: ci64, preferred-register: '' }
  - { id: 70, class: ci1, preferred-register: '' }
  - { id: 71, class: i32, preferred-register: '' }
  - { id: 72, class: ci64, preferred-register: '' }
  - { id: 73, class: ci64, preferred-register: '' }
  - { id: 74, class: ci64, preferred-register: '' }
  - { id: 75, class: ci64, preferred-register: '' }
  - { id: 76, class: i64, preferred-register: '' }
  - { id: 77, class: ci64, preferred-register: '' }
  - { id: 78, class: ci64, preferred-register: '' }
  - { id: 79, class: i64, preferred-register: '' }
  - { id: 80, class: ci64, preferred-register: '' }
  - { id: 81, class: ci64, preferred-register: '' }
  - { id: 82, class: i64, preferred-register: '' }
  - { id: 83, class: ci64, preferred-register: '' }
  - { id: 84, class: ci64, preferred-register: '' }
  - { id: 85, class: i64, preferred-register: '' }
  - { id: 86, class: ci64, preferred-register: '' }
  - { id: 87, class: ci64, preferred-register: '' }
  - { id: 88, class: ci64, preferred-register: '' }
  - { id: 89, class: ci64, preferred-register: '' }
  - { id: 90, class: ci64, preferred-register: '' }
  - { id: 91, class: ci64, preferred-register: '' }
  - { id: 92, class: ci64, preferred-register: '' }
  - { id: 93, class: ci64, preferred-register: '' }
  - { id: 94, class: ci64, preferred-register: '' }
  - { id: 95, class: ci64, preferred-register: '' }
  - { id: 96, class: ci64, preferred-register: '' }
  - { id: 97, class: ci64, preferred-register: '' }
  - { id: 98, class: ci64, preferred-register: '' }
  - { id: 99, class: ci64, preferred-register: '' }
  - { id: 100, class: ci64, preferred-register: '' }
  - { id: 101, class: ci64, preferred-register: '' }
  - { id: 102, class: ci64, preferred-register: '' }
  - { id: 103, class: ci64, preferred-register: '' }
  - { id: 104, class: ci64, preferred-register: '' }
  - { id: 105, class: ci64, preferred-register: '' }
  - { id: 106, class: ci64, preferred-register: '' }
  - { id: 107, class: ci64, preferred-register: '' }
  - { id: 108, class: i64, preferred-register: '' }
  - { id: 109, class: ci64, preferred-register: '' }
  - { id: 110, class: i64, preferred-register: '' }
  - { id: 111, class: ci64, preferred-register: '' }
  - { id: 112, class: i64, preferred-register: '' }
  - { id: 113, class: ci64, preferred-register: '' }
  - { id: 114, class: i64, preferred-register: '' }
  - { id: 115, class: ci64, preferred-register: '' }
  - { id: 116, class: i64, preferred-register: '' }
  - { id: 117, class: ci64, preferred-register: '' }
  - { id: 118, class: i64, preferred-register: '' }
  - { id: 119, class: ci64, preferred-register: '' }
  - { id: 120, class: i64, preferred-register: '' }
  - { id: 121, class: ci64, preferred-register: '' }
  - { id: 122, class: i64, preferred-register: '' }
  - { id: 123, class: ci64, preferred-register: '' }
  - { id: 124, class: i64, preferred-register: '' }
  - { id: 125, class: ci64, preferred-register: '' }
  - { id: 126, class: i64, preferred-register: '' }
  - { id: 127, class: ci64, preferred-register: '' }
  - { id: 128, class: i64, preferred-register: '' }
  - { id: 129, class: ci64, preferred-register: '' }
  - { id: 130, class: i64, preferred-register: '' }
  - { id: 131, class: ci64, preferred-register: '' }
  - { id: 132, class: i64, preferred-register: '' }
  - { id: 133, class: ci64, preferred-register: '' }
  - { id: 134, class: i64, preferred-register: '' }
  - { id: 135, class: ci64, preferred-register: '' }
  - { id: 136, class: i64, preferred-register: '' }
  - { id: 137, class: ci64, preferred-register: '' }
  - { id: 138, class: i64, preferred-register: '' }
  - { id: 139, class: ci64, preferred-register: '' }
  - { id: 140, class: i64, preferred-register: '' }
  - { id: 141, class: ci64, preferred-register: '' }
  - { id: 142, class: i64, preferred-register: '' }
  - { id: 143, class: ci64, preferred-register: '' }
  - { id: 144, class: i64, preferred-register: '' }
  - { id: 145, class: ci64, preferred-register: '' }
  - { id: 146, class: i64, preferred-register: '' }
  - { id: 147, class: ci0, preferred-register: '' }
  - { id: 148, class: ci0, preferred-register: '' }
  - { id: 149, class: ci0, preferred-register: '' }
  - { id: 150, class: ci0, preferred-register: '' }
  - { id: 151, class: ci0, preferred-register: '' }
  - { id: 152, class: ci0, preferred-register: '' }
  - { id: 153, class: ci0, preferred-register: '' }
  - { id: 154, class: ci0, preferred-register: '' }
  - { id: 155, class: ci0, preferred-register: '' }
  - { id: 156, class: ci0, preferred-register: '' }
  - { id: 157, class: ci0, preferred-register: '' }
  - { id: 158, class: ci0, preferred-register: '' }
  - { id: 159, class: ci0, preferred-register: '' }
  - { id: 160, class: ci0, preferred-register: '' }
  - { id: 161, class: ci0, preferred-register: '' }
  - { id: 162, class: ci0, preferred-register: '' }
  - { id: 163, class: ci0, preferred-register: '' }
  - { id: 164, class: ci0, preferred-register: '' }
  - { id: 165, class: ci0, preferred-register: '' }
  - { id: 166, class: ci0, preferred-register: '' }
  - { id: 167, class: ci0, preferred-register: '' }
  - { id: 168, class: ci0, preferred-register: '' }
  - { id: 169, class: ci0, preferred-register: '' }
  - { id: 170, class: ci0, preferred-register: '' }
  - { id: 171, class: ci0, preferred-register: '' }
  - { id: 172, class: ci0, preferred-register: '' }
  - { id: 173, class: ci0, preferred-register: '' }
  - { id: 174, class: ci0, preferred-register: '' }
  - { id: 175, class: ci0, preferred-register: '' }
  - { id: 176, class: ci0, preferred-register: '' }
  - { id: 177, class: ci0, preferred-register: '' }
  - { id: 178, class: ci0, preferred-register: '' }
  - { id: 179, class: ci0, preferred-register: '' }
  - { id: 180, class: ci0, preferred-register: '' }
  - { id: 181, class: ci0, preferred-register: '' }
  - { id: 182, class: ci0, preferred-register: '' }
  - { id: 183, class: ci0, preferred-register: '' }
  - { id: 184, class: ci0, preferred-register: '' }
  - { id: 185, class: ci0, preferred-register: '' }
  - { id: 186, class: ci0, preferred-register: '' }
  - { id: 187, class: ci0, preferred-register: '' }
  - { id: 188, class: ci0, preferred-register: '' }
  - { id: 189, class: ci64, preferred-register: '' }
  - { id: 190, class: i64, preferred-register: '' }
  - { id: 191, class: ci64, preferred-register: '' }
  - { id: 192, class: i64, preferred-register: '' }
  - { id: 193, class: ci64, preferred-register: '' }
  - { id: 194, class: ci0, preferred-register: '' }
  - { id: 195, class: ci0, preferred-register: '' }
  - { id: 196, class: ci0, preferred-register: '' }
  - { id: 197, class: ci0, preferred-register: '' }
  - { id: 198, class: ci0, preferred-register: '' }
  - { id: 199, class: ci64, preferred-register: '' }
  - { id: 200, class: ci64, preferred-register: '' }
  - { id: 201, class: ci64, preferred-register: '' }
  - { id: 202, class: ci64, preferred-register: '' }
  - { id: 203, class: ci64, preferred-register: '' }
  - { id: 204, class: ci64, preferred-register: '' }
  - { id: 205, class: ci64, preferred-register: '' }
  - { id: 206, class: ci64, preferred-register: '' }
  - { id: 207, class: ci64, preferred-register: '' }
  - { id: 208, class: ci64, preferred-register: '' }
  - { id: 209, class: ci64, preferred-register: '' }
  - { id: 210, class: ci64, preferred-register: '' }
  - { id: 211, class: ci64, preferred-register: '' }
  - { id: 212, class: ci64, preferred-register: '' }
  - { id: 213, class: ci64, preferred-register: '' }
  - { id: 214, class: ci64, preferred-register: '' }
  - { id: 215, class: ci64, preferred-register: '' }
  - { id: 216, class: ci64, preferred-register: '' }
  - { id: 217, class: ci64, preferred-register: '' }
  - { id: 218, class: ci64, preferred-register: '' }
  - { id: 219, class: ci64, preferred-register: '' }
  - { id: 220, class: ci64, preferred-register: '' }
  - { id: 221, class: ci64, preferred-register: '' }
  - { id: 222, class: ci64, preferred-register: '' }
  - { id: 223, class: ci64, preferred-register: '' }
  - { id: 224, class: ci64, preferred-register: '' }
  - { id: 225, class: ci64, preferred-register: '' }
  - { id: 226, class: ci64, preferred-register: '' }
  - { id: 227, class: ci64, preferred-register: '' }
  - { id: 228, class: ci64, preferred-register: '' }
  - { id: 229, class: ci64, preferred-register: '' }
  - { id: 230, class: ci64, preferred-register: '' }
  - { id: 231, class: ci64, preferred-register: '' }
  - { id: 232, class: ci64, preferred-register: '' }
  - { id: 233, class: ci64, preferred-register: '' }
  - { id: 234, class: ci64, preferred-register: '' }
  - { id: 235, class: ci64, preferred-register: '' }
  - { id: 236, class: ci64, preferred-register: '' }
  - { id: 237, class: ci64, preferred-register: '' }
  - { id: 238, class: ci64, preferred-register: '' }
  - { id: 239, class: ci64, preferred-register: '' }
  - { id: 240, class: ci64, preferred-register: '' }
  - { id: 241, class: ci64, preferred-register: '' }
  - { id: 242, class: ci64, preferred-register: '' }
  - { id: 243, class: ci64, preferred-register: '' }
  - { id: 244, class: ci64, preferred-register: '' }
  - { id: 245, class: ci64, preferred-register: '' }
  - { id: 246, class: ci64, preferred-register: '' }
  - { id: 247, class: ci64, preferred-register: '' }
  - { id: 248, class: ci64, preferred-register: '' }
  - { id: 249, class: ci64, preferred-register: '' }
  - { id: 250, class: ci64, preferred-register: '' }
  - { id: 251, class: ci64, preferred-register: '' }
  - { id: 252, class: ci64, preferred-register: '' }
  - { id: 253, class: ci64, preferred-register: '' }
  - { id: 254, class: ci64, preferred-register: '' }
  - { id: 255, class: ci64, preferred-register: '' }
  - { id: 256, class: ci64, preferred-register: '' }
  - { id: 257, class: ci64, preferred-register: '' }
  - { id: 258, class: ci64, preferred-register: '' }
  - { id: 259, class: ci64, preferred-register: '' }
  - { id: 260, class: ci64, preferred-register: '' }
  - { id: 261, class: ci64, preferred-register: '' }
  - { id: 262, class: ci64, preferred-register: '' }
  - { id: 263, class: ci64, preferred-register: '' }
  - { id: 264, class: ci64, preferred-register: '' }
  - { id: 265, class: ci64, preferred-register: '' }
  - { id: 266, class: ci64, preferred-register: '' }
  - { id: 267, class: ci64, preferred-register: '' }
  - { id: 268, class: ci64, preferred-register: '' }
  - { id: 269, class: ci64, preferred-register: '' }
  - { id: 270, class: ci64, preferred-register: '' }
  - { id: 271, class: ci64, preferred-register: '' }
  - { id: 272, class: ci64, preferred-register: '' }
  - { id: 273, class: ci64, preferred-register: '' }
  - { id: 274, class: ci64, preferred-register: '' }
  - { id: 275, class: ci64, preferred-register: '' }
  - { id: 276, class: ci64, preferred-register: '' }
  - { id: 277, class: ci64, preferred-register: '' }
  - { id: 278, class: ci64, preferred-register: '' }
  - { id: 279, class: ci64, preferred-register: '' }
  - { id: 280, class: ci64, preferred-register: '' }
  - { id: 281, class: ci64, preferred-register: '' }
  - { id: 282, class: ci64, preferred-register: '' }
  - { id: 283, class: ci64, preferred-register: '' }
  - { id: 284, class: ci64, preferred-register: '' }
  - { id: 285, class: ci64, preferred-register: '' }
  - { id: 286, class: ci64, preferred-register: '' }
  - { id: 287, class: ci64, preferred-register: '' }
  - { id: 288, class: ci64, preferred-register: '' }
  - { id: 289, class: ci64, preferred-register: '' }
  - { id: 290, class: ci64, preferred-register: '' }
  - { id: 291, class: ci64, preferred-register: '' }
  - { id: 292, class: ci64, preferred-register: '' }
  - { id: 293, class: ci64, preferred-register: '' }
  - { id: 294, class: ci64, preferred-register: '' }
  - { id: 295, class: ci64, preferred-register: '' }
  - { id: 296, class: ci64, preferred-register: '' }
  - { id: 297, class: ci64, preferred-register: '' }
  - { id: 298, class: ci64, preferred-register: '' }
  - { id: 299, class: ci64, preferred-register: '' }
  - { id: 300, class: ci64, preferred-register: '' }
  - { id: 301, class: ci64, preferred-register: '' }
  - { id: 302, class: ci64, preferred-register: '' }
  - { id: 303, class: ci64, preferred-register: '' }
  - { id: 304, class: ci64, preferred-register: '' }
  - { id: 305, class: ci64, preferred-register: '' }
  - { id: 306, class: ci64, preferred-register: '' }
  - { id: 307, class: ci64, preferred-register: '' }
  - { id: 308, class: i64, preferred-register: '' }
  - { id: 309, class: ci64, preferred-register: '' }
  - { id: 310, class: i64, preferred-register: '' }
  - { id: 311, class: ci64, preferred-register: '' }
  - { id: 312, class: ci64, preferred-register: '' }
  - { id: 313, class: i64, preferred-register: '' }
  - { id: 314, class: ci64, preferred-register: '' }
  - { id: 315, class: ci64, preferred-register: '' }
  - { id: 316, class: i64, preferred-register: '' }
  - { id: 317, class: ci64, preferred-register: '' }
  - { id: 318, class: ci64, preferred-register: '' }
  - { id: 319, class: i64, preferred-register: '' }
  - { id: 320, class: ci64, preferred-register: '' }
  - { id: 321, class: ci64, preferred-register: '' }
  - { id: 322, class: i64, preferred-register: '' }
  - { id: 323, class: ci64, preferred-register: '' }
  - { id: 324, class: ci64, preferred-register: '' }
  - { id: 325, class: i64, preferred-register: '' }
  - { id: 326, class: ci64, preferred-register: '' }
  - { id: 327, class: ci64, preferred-register: '' }
  - { id: 328, class: i64, preferred-register: '' }
  - { id: 329, class: ci64, preferred-register: '' }
  - { id: 330, class: ci64, preferred-register: '' }
  - { id: 331, class: i64, preferred-register: '' }
  - { id: 332, class: ci64, preferred-register: '' }
  - { id: 333, class: ci64, preferred-register: '' }
  - { id: 334, class: i64, preferred-register: '' }
  - { id: 335, class: ci64, preferred-register: '' }
  - { id: 336, class: ci64, preferred-register: '' }
  - { id: 337, class: i64, preferred-register: '' }
  - { id: 338, class: ci64, preferred-register: '' }
  - { id: 339, class: ci64, preferred-register: '' }
  - { id: 340, class: i64, preferred-register: '' }
  - { id: 341, class: ci64, preferred-register: '' }
  - { id: 342, class: ci64, preferred-register: '' }
  - { id: 343, class: i64, preferred-register: '' }
  - { id: 344, class: ci64, preferred-register: '' }
  - { id: 345, class: ci0, preferred-register: '' }
  - { id: 346, class: ci0, preferred-register: '' }
  - { id: 347, class: ci0, preferred-register: '' }
  - { id: 348, class: ci0, preferred-register: '' }
  - { id: 349, class: ci0, preferred-register: '' }
  - { id: 350, class: ci0, preferred-register: '' }
  - { id: 351, class: ci0, preferred-register: '' }
  - { id: 352, class: ci0, preferred-register: '' }
  - { id: 353, class: ci0, preferred-register: '' }
  - { id: 354, class: ci0, preferred-register: '' }
  - { id: 355, class: ci0, preferred-register: '' }
  - { id: 356, class: ci0, preferred-register: '' }
  - { id: 357, class: ci0, preferred-register: '' }
  - { id: 358, class: ci0, preferred-register: '' }
  - { id: 359, class: ci0, preferred-register: '' }
  - { id: 360, class: ci0, preferred-register: '' }
  - { id: 361, class: ci0, preferred-register: '' }
  - { id: 362, class: ci0, preferred-register: '' }
  - { id: 363, class: ci0, preferred-register: '' }
  - { id: 364, class: ci0, preferred-register: '' }
  - { id: 365, class: ci0, preferred-register: '' }
  - { id: 366, class: ci0, preferred-register: '' }
  - { id: 367, class: ci1, preferred-register: '' }
  - { id: 368, class: ci1, preferred-register: '' }
  - { id: 369, class: ci1, preferred-register: '' }
  - { id: 370, class: ci1, preferred-register: '' }
  - { id: 371, class: ci1, preferred-register: '' }
liveins:         
  - { reg: '$p64_2', virtual-reg: '%18' }
  - { reg: '$p64_3', virtual-reg: '%19' }
  - { reg: '$p64_4', virtual-reg: '%20' }
  - { reg: '$p64_5', virtual-reg: '%21' }
  - { reg: '$p64_6', virtual-reg: '%22' }
  - { reg: '$p64_7', virtual-reg: '%23' }
  - { reg: '$p64_8', virtual-reg: '%24' }
  - { reg: '$p64_9', virtual-reg: '%25' }
  - { reg: '$p64_10', virtual-reg: '%26' }
  - { reg: '$p64_11', virtual-reg: '%27' }
  - { reg: '$p64_12', virtual-reg: '%28' }
  - { reg: '$p64_13', virtual-reg: '%29' }
  - { reg: '$p64_14', virtual-reg: '%30' }
  - { reg: '$p64_15', virtual-reg: '%31' }
  - { reg: '$p64_16', virtual-reg: '%32' }
  - { reg: '$p64_17', virtual-reg: '%33' }
  - { reg: '$p64_18', virtual-reg: '%34' }
  - { reg: '$p64_19', virtual-reg: '%35' }
  - { reg: '$p64_20', virtual-reg: '%36' }
  - { reg: '$p64_21', virtual-reg: '%37' }
  - { reg: '$p64_22', virtual-reg: '%38' }
  - { reg: '$p64_23', virtual-reg: '%39' }
  - { reg: '$p64_24', virtual-reg: '%40' }
  - { reg: '$p64_25', virtual-reg: '%41' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      
stack:           
constants:       
body:             |
  bb.0.entry:
    liveins: $p64_2, $p64_3, $p64_4, $p64_5, $p64_6, $p64_7, $p64_8, $p64_9, $p64_10, $p64_11, $p64_12, $p64_13, $p64_14, $p64_15, $p64_16, $p64_17, $p64_18, $p64_19, $p64_20, $p64_21, $p64_22, $p64_23, $p64_24, $p64_25
  
    %16:ci0 = MOV0 $ra
    %41:ci64 = COPY $p64_25
    %40:ci64 = COPY $p64_24
    %39:ci64 = COPY $p64_23
    %38:ci64 = COPY $p64_22
    %37:ci64 = COPY $p64_21
    %36:ci64 = COPY $p64_20
    %35:ci64 = COPY $p64_19
    %34:ci64 = COPY $p64_18
    %33:ci64 = COPY $p64_17
    %32:ci64 = COPY $p64_16
    %31:ci64 = COPY $p64_15
    %30:ci64 = COPY $p64_14
    %29:ci64 = COPY $p64_13
    %28:ci64 = COPY $p64_12
    %27:ci64 = COPY $p64_11
    %26:ci64 = COPY $p64_10
    %25:ci64 = COPY $p64_9
    %24:ci64 = COPY $p64_8
    %23:ci64 = COPY $p64_7
    %22:ci64 = COPY $p64_6
    %21:ci64 = COPY $p64_5
    %20:ci64 = COPY $p64_4
    %19:ci64 = COPY $p64_3
    %18:ci64 = COPY $p64_2
    %42:ci1 = CMPLTS32 %18, 1
    %371:ci1 = NOT1 %42
    %194:ci0 = FILTER0 %371, %16
    %199:ci64 = FILTER64 %371, %18
    %201:ci64 = FILTER64 %371, %19
    %206:ci64 = FILTER64 %371, %20
    %211:ci64 = FILTER64 %371, %21
    %216:ci64 = FILTER64 %371, %22
    %221:ci64 = FILTER64 %371, %23
    %226:ci64 = FILTER64 %371, %24
    %231:ci64 = FILTER64 %371, %25
    %236:ci64 = FILTER64 %371, %26
    %241:ci64 = FILTER64 %371, %27
    %246:ci64 = FILTER64 %371, %28
    %251:ci64 = FILTER64 %371, %29
    %253:ci64 = FILTER64 %371, %30
    %255:ci64 = FILTER64 %371, %31
    %257:ci64 = FILTER64 %371, %32
    %262:ci64 = FILTER64 %371, %33
    %267:ci64 = FILTER64 %371, %34
    %272:ci64 = FILTER64 %371, %35
    %277:ci64 = FILTER64 %371, %36
    %282:ci64 = FILTER64 %371, %37
    %287:ci64 = FILTER64 %371, %38
    %292:ci64 = FILTER64 %371, %39
    %297:ci64 = FILTER64 %371, %40
    %302:ci64 = FILTER64 %371, %41
    %44:ci64, $ign = LD64 %251, 3, %194 :: (load 8 from %ir.c, !tbaa !3)
    %46:ci64, $ign = LD64D %251, 8, 3, %194 :: (load 8 from %ir.arrayidx8, !tbaa !3)
    %48:ci64, $ign = LD64D %251, 16, 3, %194 :: (load 8 from %ir.arrayidx10, !tbaa !3)
    %50:ci64, $ign = LD64D %251, 24, 3, %194 :: (load 8 from %ir.arrayidx13, !tbaa !3)
    %52:ci64, $ign = LD64 %253, 3, %194 :: (load 8 from %ir.dc, !tbaa !3)
    %54:ci64, $ign = LD64D %253, 8, 3, %194 :: (load 8 from %ir.arrayidx18, !tbaa !3)
    %56:ci64, $ign = LD64D %253, 16, 3, %194 :: (load 8 from %ir.arrayidx21, !tbaa !3)
    %58:ci64, $ign = LD64D %253, 24, 3, %194 :: (load 8 from %ir.arrayidx24, !tbaa !3)
    %60:ci64, $ign = LD64 %255, 3, %194 :: (load 8 from %ir.d2c, !tbaa !3)
    %62:ci64, $ign = LD64D %255, 8, 3, %194 :: (load 8 from %ir.arrayidx29, !tbaa !3)
    %64:ci64, $ign = LD64D %255, 16, 3, %194 :: (load 8 from %ir.arrayidx32, !tbaa !3)
    %66:ci64, $ign = LD64D %255, 24, 3, %194 :: (load 8 from %ir.arrayidx35, !tbaa !3)
    %69:ci64 = SEXT64 %199, 32
    %13:ci64 = ADD64 killed %69, -1
    %14:ci64, $ign, $ign, %369:ci1 = SEQOTLTS64 -1, %13, 1
    %70:ci1 = NOT1 %369
    %196:ci0 = REPEATO0 %70, %194
    %203:ci64 = REPEATO64 %70, %201
    %208:ci64 = REPEATO64 %70, %206
    %213:ci64 = REPEATO64 %70, %211
    %218:ci64 = REPEATO64 %70, %216
    %223:ci64 = REPEATO64 %70, %221
    %228:ci64 = REPEATO64 %70, %226
    %233:ci64 = REPEATO64 %70, %231
    %238:ci64 = REPEATO64 %70, %236
    %243:ci64 = REPEATO64 %70, %241
    %248:ci64 = REPEATO64 %70, %246
    %259:ci64 = REPEATO64 %70, %257
    %264:ci64 = REPEATO64 %70, %262
    %269:ci64 = REPEATO64 %70, %267
    %274:ci64 = REPEATO64 %70, %272
    %279:ci64 = REPEATO64 %70, %277
    %284:ci64 = REPEATO64 %70, %282
    %289:ci64 = REPEATO64 %70, %287
    %294:ci64 = REPEATO64 %70, %292
    %299:ci64 = REPEATO64 %70, %297
    %304:ci64 = REPEATO64 %70, %302
    %309:ci64 = REPEATO64 %70, %44
    %312:ci64 = REPEATO64 %70, %46
    %315:ci64 = REPEATO64 %70, %48
    %318:ci64 = REPEATO64 %70, %50
    %321:ci64 = REPEATO64 %70, %52
    %324:ci64 = REPEATO64 %70, %54
    %327:ci64 = REPEATO64 %70, %56
    %330:ci64 = REPEATO64 %70, %58
    %333:ci64 = REPEATO64 %70, %60
    %336:ci64 = REPEATO64 %70, %62
    %339:ci64 = REPEATO64 %70, %64
    %342:ci64 = REPEATO64 %70, %66
    %72:ci64 = SLL64 %14, 3
    %73:ci64 = ADD64 %304, %72
    %74:ci64 = ADD64 %248, %72
    %75:ci64, $ign = LD64D killed %74, 8, 3, %196 :: (load 8 from %ir.scevgep259, !tbaa !3)
    %77:ci64 = ADD64 %243, %72
    %78:ci64, $ign = LD64D killed %77, 8, 3, %196 :: (load 8 from %ir.scevgep261, !tbaa !3)
    %80:ci64 = ADD64 %233, %72
    %81:ci64, $ign = LD64D killed %80, 8, 3, %196 :: (load 8 from %ir.scevgep265, !tbaa !3)
    %83:ci64 = ADD64 %238, %72
    %84:ci64, $ign = LD64D killed %83, 8, 3, %196 :: (load 8 from %ir.scevgep263, !tbaa !3)
    %86:ci64 = contract MULF64 %84, %312, 0
    %87:ci64 = contract FMAF64 %81, %309, killed %86, 0
    %88:ci64 = contract FMAF64 %78, %315, killed %87, 0
    %89:ci64 = contract FMAF64 %75, %318, killed %88, 0
    %90:ci64 = ADD64 %299, %72
    %91:ci64 = contract MULF64 %84, %324, 0
    %92:ci64 = contract FMAF64 %81, %321, killed %91, 0
    %93:ci64 = contract FMAF64 %78, %327, killed %92, 0
    %94:ci64 = contract FMAF64 %75, %330, killed %93, 0
    %95:ci64 = ADD64 %294, %72
    %96:ci64 = ADD64 %289, %72
    %97:ci64 = ADD64 %284, %72
    %98:ci64 = contract MULF64 %84, %336, 0
    %99:ci64 = contract FMAF64 %81, %333, killed %98, 0
    %100:ci64 = contract FMAF64 %78, %339, killed %99, 0
    %101:ci64 = contract FMAF64 %75, %342, killed %100, 0
    %102:ci64 = ADD64 %279, %72
    %103:ci64 = ADD64 %274, %72
    %104:ci64 = ADD64 %269, %72
    %105:ci64 = ADD64 %264, %72
    %106:ci64 = ADD64 %259, %72
    %107:ci64, $ign = LD64D %106, 8, 3, %196 :: (load 8 from %ir.scevgep257, !tbaa !3)
    %109:ci64 = contract FMAF64 %89, %203, %107, 0
    %164:ci0 = ST64D %106, 8, %109, 3, $ign :: (store 8 into %ir.scevgep257, !tbaa !3)
    %111:ci64, $ign = LD64D %105, 8, 3, %196 :: (load 8 from %ir.scevgep255, !tbaa !3)
    %113:ci64 = contract FMAF64 %89, %218, %111, 0
    %166:ci0 = ST64D %105, 8, %113, 3, $ign :: (store 8 into %ir.scevgep255, !tbaa !3)
    %115:ci64, $ign = LD64D %104, 8, 3, %196 :: (load 8 from %ir.scevgep253, !tbaa !3)
    %117:ci64 = contract FMAF64 %94, %208, %115, 0
    %168:ci0 = ST64D %104, 8, %117, 3, $ign :: (store 8 into %ir.scevgep253, !tbaa !3)
    %119:ci64, $ign = LD64D %103, 8, 3, %196 :: (load 8 from %ir.scevgep251, !tbaa !3)
    %121:ci64 = contract FMAF64 %89, %228, %119, 0
    %170:ci0 = ST64D %103, 8, %121, 3, $ign :: (store 8 into %ir.scevgep251, !tbaa !3)
    %123:ci64, $ign = LD64D %102, 8, 3, %196 :: (load 8 from %ir.scevgep249, !tbaa !3)
    %125:ci64 = contract FMAF64 %94, %223, %123, 0
    %172:ci0 = ST64D %102, 8, %125, 3, $ign :: (store 8 into %ir.scevgep249, !tbaa !3)
    %127:ci64, $ign = LD64D %97, 8, 3, %196 :: (load 8 from %ir.scevgep247, !tbaa !3)
    %129:ci64 = contract FMAF64 killed %101, %213, %127, 0
    %174:ci0 = ST64D %97, 8, %129, 3, $ign :: (store 8 into %ir.scevgep247, !tbaa !3)
    %131:ci64, $ign = LD64D %96, 8, 3, %196 :: (load 8 from %ir.scevgep245, !tbaa !3)
    %133:ci64 = contract FMAF64 %89, %208, %131, 0
    %176:ci0 = ST64D %96, 8, %133, 3, $ign :: (store 8 into %ir.scevgep245, !tbaa !3)
    %135:ci64, $ign = LD64D %95, 8, 3, %196 :: (load 8 from %ir.scevgep243, !tbaa !3)
    %137:ci64 = contract FMAF64 %89, %223, %135, 0
    %178:ci0 = ST64D %95, 8, %137, 3, $ign :: (store 8 into %ir.scevgep243, !tbaa !3)
    %139:ci64, $ign = LD64D %90, 8, 3, %196 :: (load 8 from %ir.scevgep241, !tbaa !3)
    %141:ci64 = contract FMAF64 %94, %213, %139, 0
    %180:ci0 = ST64D %90, 8, %141, 3, $ign :: (store 8 into %ir.scevgep241, !tbaa !3)
    %143:ci64, $ign = LD64D %73, 8, 3, %196 :: (load 8 from %ir.scevgep239, !tbaa !3)
    %145:ci64 = contract FMAF64 %89, %213, %143, 0
    %182:ci0 = ST64D %73, 8, %145, 3, $ign :: (store 8 into %ir.scevgep239, !tbaa !3)
    %345:ci0 = FILTER0 %369, %164
    %347:ci0 = FILTER0 %369, %166
    %349:ci0 = FILTER0 %369, %168
    %351:ci0 = FILTER0 %369, %170
    %353:ci0 = FILTER0 %369, %172
    %355:ci0 = FILTER0 %369, %174
    %357:ci0 = FILTER0 %369, %176
    %359:ci0 = FILTER0 %369, %178
    %361:ci0 = FILTER0 %369, %180
    %363:ci0 = FILTER0 %369, %182
    %184:ci0 = ALL0 %345, %347, %349, %351
    %185:ci0 = ALL0 %353, %355, %357, %359
    %183:ci0 = ALL0 %184, %185, %361, %363
    %186:ci0 = PICK0 %42, %183, 0
    %187:ci0 = ALL0 %16, %186, $ign, $ign
    %17:ci0 = MOV0 %187
    RET

...
