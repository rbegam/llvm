; REQUIRES: intel_feature_isa_amx
; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+amx-tile -mattr=+amx-int8 | FileCheck %s --check-prefix=X86_64

define void @test_amx(i8* %pointer) {
; X86_64-LABEL: test_amx:
; X86_64:       # %bb.0:
; X86_64-NEXT:    ldtilecfg (%rdi)
; X86_64-NEXT:    sttilecfg (%rdi)
; X86_64-NEXT:    tilerelease
; X86_64-NEXT:    tilezero %tmm3
; X86_64-NEXT:    tdpbssd %tmm7, %tmm4, %tmm3
; X86_64-NEXT:    tdpbsud %tmm7, %tmm4, %tmm3
; X86_64-NEXT:    tdpbusd %tmm7, %tmm0, %tmm3
; X86_64-NEXT:    tdpbuud %tmm1, %tmm4, %tmm3
; X86_64-NEXT:    retq
  call void @llvm.x86.ldtilecfg(i8* %pointer)
  call void @llvm.x86.sttilecfg(i8* %pointer)
  call void @llvm.x86.tilerelease()
  call void @llvm.x86.tilezero(i8 3)
  call void @llvm.x86.tdpbssd(i8 3, i8 4, i8 7)
  call void @llvm.x86.tdpbsud(i8 3, i8 4, i8 7)
  call void @llvm.x86.tdpbusd(i8 3, i8 0, i8 7)
  call void @llvm.x86.tdpbuud(i8 3, i8 4, i8 1)
  ret void
}

declare void @llvm.x86.ldtilecfg(i8* %pointer)
declare void @llvm.x86.sttilecfg(i8* %pointer)
declare void @llvm.x86.tilerelease()
declare void @llvm.x86.tilezero(i8 %tile)
declare void @llvm.x86.tdpbssd(i8 %tile0, i8 %tile1, i8 %tile2)
declare void @llvm.x86.tdpbsud(i8 %tile0, i8 %tile1, i8 %tile2)
declare void @llvm.x86.tdpbusd(i8 %tile0, i8 %tile1, i8 %tile2)
declare void @llvm.x86.tdpbuud(i8 %tile0, i8 %tile1, i8 %tile2)
