; REQUIRES: intel_feature_isa_fp16
; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+avx512fp16 | FileCheck %s

define void @test5(half %x, half* %y) {
; CHECK-LABEL: test5:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vmovsh %xmm0, (%rdi)
; CHECK-NEXT:    retq
   store half %x, half* %y, align 2
   ret void
}

define half @test7(i16* %x) {
; CHECK-LABEL: test7:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vmovsh (%rdi), %xmm0
; CHECK-NEXT:    retq
   %y = load i16, i16* %x
   %res = bitcast i16 %y to half
   ret half %res
}

define <8 x i16> @test10(i16* %x) {
; CHECK-LABEL: test10:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vmovw (%rdi), %xmm0
; CHECK-NEXT:    retq
   %y = load i16, i16* %x, align 2
   %res = insertelement <8 x i16>zeroinitializer, i16 %y, i32 0
   ret <8 x i16>%res
}

define <8 x half> @test11(half* %x) {
; CHECK-LABEL: test11:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vmovsh (%rdi), %xmm0
; CHECK-NEXT:    retq
   %y = load half, half* %x, align 2
   %res = insertelement <8 x half>zeroinitializer, half %y, i32 0
   ret <8 x half>%res
}

define <8 x i16> @test15(i16 %x) {
; CHECK-LABEL: test15:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vmovw %edi, %xmm0
; CHECK-NEXT:    retq
   %res = insertelement <8 x i16>zeroinitializer, i16 %x, i32 0
   ret <8 x i16>%res
}
