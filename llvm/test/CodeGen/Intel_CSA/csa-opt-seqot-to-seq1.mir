# RUN: llc -run-pass=csa-opt-seqot-to-seq -debug-only=csa-opt-seqot-to-seq -o /dev/null %s 2>&1 | FileCheck %s
# vgh_inner kernel from QMCPack compiled with duplicated loop, which causes the zero-trip check
# to be used by two SEQOTs.

# NOTE: register class of the return value %22 in MIR was adjusted manually
#       from ri1 to ci0 to make the MachineVerifier happy.

# NOTE: FileCheck rules must be commented with # to make llc happy.
#; CHECK: BEGIN: SEQOT->SEQ opt.
#; CHECK: Initial candidate for SEQOT->SEQ opt:
#; CHECK: Adding SEQOT for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: Adding optional-3 REPEATO for optimization:
#; CHECK: SUCCESS: the pattern has been recognized.
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming REPEATO:
#; CHECK: Transforming SEQOT:
#; CHECK: Transforming SEQOT:
#; CHECK: END: SEQOT->SEQ opt.

--- |
  ; ModuleID = 'inner_loop.cpp'
  source_filename = "inner_loop.cpp"
  target datalayout = "e-m:e-i64:64-n32:64"
  target triple = "csa"
  
  ; Function Attrs: nounwind uwtable
  define dso_local void @_Z9vgh_inneriddddddPdS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_(i32 %num_splines, double %pre20, double %pre10, double %pre00, double %pre11, double %pre01, double %pre02, double* noalias nocapture readonly %coefs, double* noalias nocapture readonly %coefszs, double* noalias nocapture readonly %coefs2zs, double* noalias nocapture readonly %coefs3zs, double* noalias nocapture readonly %c, double* noalias nocapture readonly %dc, double* noalias nocapture readonly %d2c, double* noalias nocapture %hxx, double* noalias nocapture %hxy, double* noalias nocapture %hxz, double* noalias nocapture %hyy, double* noalias nocapture %hyz, double* noalias nocapture %hzz, double* noalias nocapture %gx, double* noalias nocapture %gy, double* noalias nocapture %gz, double* noalias nocapture %vals) local_unnamed_addr #0 {
  entry:
    %clie_pre301 = tail call i32 @llvm.csa.parallel.region.entry(i32 1033)
    %cmp305 = icmp sgt i32 %num_splines, 0
    br i1 %cmp305, label %for.body.preheader, label %for.cond.cleanup.thread
  
  for.cond.cleanup.thread:                          ; preds = %entry
    tail call void @llvm.csa.parallel.region.exit(i32 %clie_pre301)
    %clie_pre311 = tail call i32 @llvm.csa.parallel.region.entry(i32 1032)
    br label %for.cond.cleanup81
  
  for.body.preheader:                               ; preds = %entry
    %arrayidx35 = getelementptr inbounds double, double* %d2c, i64 3
    %arrayidx32 = getelementptr inbounds double, double* %d2c, i64 2
    %arrayidx29 = getelementptr inbounds double, double* %d2c, i64 1
    %arrayidx24 = getelementptr inbounds double, double* %dc, i64 3
    %arrayidx21 = getelementptr inbounds double, double* %dc, i64 2
    %arrayidx18 = getelementptr inbounds double, double* %dc, i64 1
    %arrayidx13 = getelementptr inbounds double, double* %c, i64 3
    %arrayidx10 = getelementptr inbounds double, double* %c, i64 2
    %arrayidx8 = getelementptr inbounds double, double* %c, i64 1
    %wide.trip.count309 = sext i32 %num_splines to i64
    %gepload = load double, double* %c, align 8, !tbaa !3
    %gepload336 = load double, double* %arrayidx8, align 8, !tbaa !3
    %gepload338 = load double, double* %arrayidx10, align 8, !tbaa !3
    %gepload340 = load double, double* %arrayidx13, align 8, !tbaa !3
    %gepload341 = load double, double* %dc, align 8, !tbaa !3
    %gepload343 = load double, double* %arrayidx18, align 8, !tbaa !3
    %gepload345 = load double, double* %arrayidx21, align 8, !tbaa !3
    %gepload347 = load double, double* %arrayidx24, align 8, !tbaa !3
    %gepload348 = load double, double* %d2c, align 8, !tbaa !3
    %gepload350 = load double, double* %arrayidx29, align 8, !tbaa !3
    %gepload352 = load double, double* %arrayidx32, align 8, !tbaa !3
    %gepload354 = load double, double* %arrayidx35, align 8, !tbaa !3
    %0 = add nsw i64 %wide.trip.count309, -1
    br label %loop.202
  
  for.cond.cleanup81.loopexit:                      ; preds = %loop.203
    br label %for.cond.cleanup81
  
  for.cond.cleanup81:                               ; preds = %for.cond.cleanup81.loopexit, %for.cond.cleanup.thread
    %clie_pre312 = phi i32 [ %clie_pre311, %for.cond.cleanup.thread ], [ %clie_pre, %for.cond.cleanup81.loopexit ]
    tail call void @llvm.csa.parallel.region.exit(i32 %clie_pre312)
    ret void
  
  loop.202:                                         ; preds = %loop.202, %for.body.preheader
    %lsr.iv558 = phi i64 [ %lsr.iv.next559, %loop.202 ], [ -1, %for.body.preheader ]
    %1 = tail call i32 @llvm.csa.parallel.section.entry(i32 %clie_pre301)
    %scevgep586 = getelementptr double, double* %coefs, i64 1
    %scevgep587 = getelementptr double, double* %scevgep586, i64 %lsr.iv558
    %gepload356 = load double, double* %scevgep587, align 8, !tbaa !3
    %scevgep584 = getelementptr double, double* %coefszs, i64 1
    %scevgep585 = getelementptr double, double* %scevgep584, i64 %lsr.iv558
    %gepload358 = load double, double* %scevgep585, align 8, !tbaa !3
    %scevgep582 = getelementptr double, double* %coefs2zs, i64 1
    %scevgep583 = getelementptr double, double* %scevgep582, i64 %lsr.iv558
    %gepload360 = load double, double* %scevgep583, align 8, !tbaa !3
    %scevgep580 = getelementptr double, double* %coefs3zs, i64 1
    %scevgep581 = getelementptr double, double* %scevgep580, i64 %lsr.iv558
    %gepload362 = load double, double* %scevgep581, align 8, !tbaa !3
    %2 = fmul contract double %gepload356, %gepload
    %3 = fmul contract double %gepload358, %gepload336
    %4 = fadd contract double %2, %3
    %5 = fmul contract double %gepload360, %gepload338
    %6 = fadd contract double %4, %5
    %7 = fmul contract double %gepload362, %gepload340
    %8 = fadd contract double %6, %7
    %9 = fmul contract double %gepload356, %gepload341
    %10 = fmul contract double %gepload358, %gepload343
    %11 = fadd contract double %9, %10
    %12 = fmul contract double %gepload360, %gepload345
    %13 = fadd contract double %11, %12
    %14 = fmul contract double %gepload362, %gepload347
    %15 = fadd contract double %13, %14
    %16 = fmul contract double %gepload356, %gepload348
    %17 = fmul contract double %gepload358, %gepload350
    %18 = fadd contract double %16, %17
    %19 = fmul contract double %gepload360, %gepload352
    %20 = fadd contract double %18, %19
    %21 = fmul contract double %gepload362, %gepload354
    %22 = fadd contract double %20, %21
    %23 = fmul contract double %8, %pre20
    %scevgep578 = getelementptr double, double* %hxx, i64 1
    %scevgep579 = getelementptr double, double* %scevgep578, i64 %lsr.iv558
    %gepload372 = load double, double* %scevgep579, align 8, !tbaa !3
    %24 = fadd contract double %23, %gepload372
    store double %24, double* %scevgep579, align 8, !tbaa !3
    %25 = fmul contract double %8, %pre11
    %scevgep576 = getelementptr double, double* %hxy, i64 1
    %scevgep577 = getelementptr double, double* %scevgep576, i64 %lsr.iv558
    %gepload376 = load double, double* %scevgep577, align 8, !tbaa !3
    %26 = fadd contract double %25, %gepload376
    store double %26, double* %scevgep577, align 8, !tbaa !3
    %27 = fmul contract double %15, %pre10
    %scevgep574 = getelementptr double, double* %hxz, i64 1
    %scevgep575 = getelementptr double, double* %scevgep574, i64 %lsr.iv558
    %gepload379 = load double, double* %scevgep575, align 8, !tbaa !3
    %28 = fadd contract double %27, %gepload379
    store double %28, double* %scevgep575, align 8, !tbaa !3
    %29 = fmul contract double %8, %pre02
    %scevgep572 = getelementptr double, double* %hyy, i64 1
    %scevgep573 = getelementptr double, double* %scevgep572, i64 %lsr.iv558
    %gepload383 = load double, double* %scevgep573, align 8, !tbaa !3
    %30 = fadd contract double %29, %gepload383
    store double %30, double* %scevgep573, align 8, !tbaa !3
    %31 = fmul contract double %15, %pre01
    %scevgep570 = getelementptr double, double* %hyz, i64 1
    %scevgep571 = getelementptr double, double* %scevgep570, i64 %lsr.iv558
    %gepload387 = load double, double* %scevgep571, align 8, !tbaa !3
    %32 = fadd contract double %31, %gepload387
    store double %32, double* %scevgep571, align 8, !tbaa !3
    %33 = fmul contract double %22, %pre00
    %scevgep568 = getelementptr double, double* %hzz, i64 1
    %scevgep569 = getelementptr double, double* %scevgep568, i64 %lsr.iv558
    %gepload390 = load double, double* %scevgep569, align 8, !tbaa !3
    %34 = fadd contract double %33, %gepload390
    store double %34, double* %scevgep569, align 8, !tbaa !3
    %35 = fmul contract double %8, %pre10
    %scevgep566 = getelementptr double, double* %gx, i64 1
    %scevgep567 = getelementptr double, double* %scevgep566, i64 %lsr.iv558
    %gepload394 = load double, double* %scevgep567, align 8, !tbaa !3
    %36 = fadd contract double %35, %gepload394
    store double %36, double* %scevgep567, align 8, !tbaa !3
    %37 = fmul contract double %8, %pre01
    %scevgep564 = getelementptr double, double* %gy, i64 1
    %scevgep565 = getelementptr double, double* %scevgep564, i64 %lsr.iv558
    %gepload398 = load double, double* %scevgep565, align 8, !tbaa !3
    %38 = fadd contract double %37, %gepload398
    store double %38, double* %scevgep565, align 8, !tbaa !3
    %39 = fmul contract double %15, %pre00
    %scevgep562 = getelementptr double, double* %gz, i64 1
    %scevgep563 = getelementptr double, double* %scevgep562, i64 %lsr.iv558
    %gepload402 = load double, double* %scevgep563, align 8, !tbaa !3
    %40 = fadd contract double %39, %gepload402
    store double %40, double* %scevgep563, align 8, !tbaa !3
    %41 = fmul contract double %8, %pre00
    %scevgep560 = getelementptr double, double* %vals, i64 1
    %scevgep561 = getelementptr double, double* %scevgep560, i64 %lsr.iv558
    %gepload406 = load double, double* %scevgep561, align 8, !tbaa !3
    %42 = fadd contract double %41, %gepload406
    store double %42, double* %scevgep561, align 8, !tbaa !3
    tail call void @llvm.csa.parallel.section.exit(i32 %1)
    %lsr.iv.next559 = add nsw i64 %lsr.iv558, 1
    %condloop.202 = icmp slt i64 %lsr.iv.next559, %0
    br i1 %condloop.202, label %loop.202, label %afterloop.202
  
  afterloop.202:                                    ; preds = %loop.202
    tail call void @llvm.csa.parallel.region.exit(i32 %clie_pre301)
    %clie_pre = tail call i32 @llvm.csa.parallel.region.entry(i32 1032)
    br label %loop.203
  
  loop.203:                                         ; preds = %loop.203, %afterloop.202
    %lsr.iv = phi i64 [ %lsr.iv.next, %loop.203 ], [ -1, %afterloop.202 ]
    %43 = tail call i32 @llvm.csa.parallel.section.entry(i32 %clie_pre)
    %scevgep556 = getelementptr double, double* %coefs, i64 1
    %scevgep557 = getelementptr double, double* %scevgep556, i64 %lsr.iv
    %gepload431 = load double, double* %scevgep557, align 8, !tbaa !3
    %scevgep554 = getelementptr double, double* %coefszs, i64 1
    %scevgep555 = getelementptr double, double* %scevgep554, i64 %lsr.iv
    %gepload433 = load double, double* %scevgep555, align 8, !tbaa !3
    %scevgep552 = getelementptr double, double* %coefs2zs, i64 1
    %scevgep553 = getelementptr double, double* %scevgep552, i64 %lsr.iv
    %gepload435 = load double, double* %scevgep553, align 8, !tbaa !3
    %scevgep550 = getelementptr double, double* %coefs3zs, i64 1
    %scevgep551 = getelementptr double, double* %scevgep550, i64 %lsr.iv
    %gepload437 = load double, double* %scevgep551, align 8, !tbaa !3
    %44 = fmul contract double %gepload431, %gepload
    %45 = fmul contract double %gepload433, %gepload336
    %46 = fadd contract double %44, %45
    %47 = fmul contract double %gepload435, %gepload338
    %48 = fadd contract double %46, %47
    %49 = fmul contract double %gepload437, %gepload340
    %50 = fadd contract double %48, %49
    %51 = fmul contract double %gepload431, %gepload341
    %52 = fmul contract double %gepload433, %gepload343
    %53 = fadd contract double %51, %52
    %54 = fmul contract double %gepload435, %gepload345
    %55 = fadd contract double %53, %54
    %56 = fmul contract double %gepload437, %gepload347
    %57 = fadd contract double %55, %56
    %58 = fmul contract double %gepload431, %gepload348
    %59 = fmul contract double %gepload433, %gepload350
    %60 = fadd contract double %58, %59
    %61 = fmul contract double %gepload435, %gepload352
    %62 = fadd contract double %60, %61
    %63 = fmul contract double %gepload437, %gepload354
    %64 = fadd contract double %62, %63
    %65 = fmul contract double %50, %pre20
    %scevgep548 = getelementptr double, double* %hxx, i64 1
    %scevgep549 = getelementptr double, double* %scevgep548, i64 %lsr.iv
    %gepload447 = load double, double* %scevgep549, align 8, !tbaa !3
    %66 = fadd contract double %65, %gepload447
    store double %66, double* %scevgep549, align 8, !tbaa !3
    %67 = fmul contract double %50, %pre11
    %scevgep546 = getelementptr double, double* %hxy, i64 1
    %scevgep547 = getelementptr double, double* %scevgep546, i64 %lsr.iv
    %gepload451 = load double, double* %scevgep547, align 8, !tbaa !3
    %68 = fadd contract double %67, %gepload451
    store double %68, double* %scevgep547, align 8, !tbaa !3
    %69 = fmul contract double %57, %pre10
    %scevgep544 = getelementptr double, double* %hxz, i64 1
    %scevgep545 = getelementptr double, double* %scevgep544, i64 %lsr.iv
    %gepload454 = load double, double* %scevgep545, align 8, !tbaa !3
    %70 = fadd contract double %69, %gepload454
    store double %70, double* %scevgep545, align 8, !tbaa !3
    %71 = fmul contract double %50, %pre02
    %scevgep542 = getelementptr double, double* %hyy, i64 1
    %scevgep543 = getelementptr double, double* %scevgep542, i64 %lsr.iv
    %gepload458 = load double, double* %scevgep543, align 8, !tbaa !3
    %72 = fadd contract double %71, %gepload458
    store double %72, double* %scevgep543, align 8, !tbaa !3
    %73 = fmul contract double %57, %pre01
    %scevgep540 = getelementptr double, double* %hyz, i64 1
    %scevgep541 = getelementptr double, double* %scevgep540, i64 %lsr.iv
    %gepload462 = load double, double* %scevgep541, align 8, !tbaa !3
    %74 = fadd contract double %73, %gepload462
    store double %74, double* %scevgep541, align 8, !tbaa !3
    %75 = fmul contract double %64, %pre00
    %scevgep538 = getelementptr double, double* %hzz, i64 1
    %scevgep539 = getelementptr double, double* %scevgep538, i64 %lsr.iv
    %gepload465 = load double, double* %scevgep539, align 8, !tbaa !3
    %76 = fadd contract double %75, %gepload465
    store double %76, double* %scevgep539, align 8, !tbaa !3
    %77 = fmul contract double %50, %pre10
    %scevgep536 = getelementptr double, double* %gx, i64 1
    %scevgep537 = getelementptr double, double* %scevgep536, i64 %lsr.iv
    %gepload469 = load double, double* %scevgep537, align 8, !tbaa !3
    %78 = fadd contract double %77, %gepload469
    store double %78, double* %scevgep537, align 8, !tbaa !3
    %79 = fmul contract double %50, %pre01
    %scevgep534 = getelementptr double, double* %gy, i64 1
    %scevgep535 = getelementptr double, double* %scevgep534, i64 %lsr.iv
    %gepload473 = load double, double* %scevgep535, align 8, !tbaa !3
    %80 = fadd contract double %79, %gepload473
    store double %80, double* %scevgep535, align 8, !tbaa !3
    %81 = fmul contract double %57, %pre00
    %scevgep532 = getelementptr double, double* %gz, i64 1
    %scevgep533 = getelementptr double, double* %scevgep532, i64 %lsr.iv
    %gepload477 = load double, double* %scevgep533, align 8, !tbaa !3
    %82 = fadd contract double %81, %gepload477
    store double %82, double* %scevgep533, align 8, !tbaa !3
    %83 = fmul contract double %50, %pre00
    %scevgep = getelementptr double, double* %vals, i64 1
    %scevgep531 = getelementptr double, double* %scevgep, i64 %lsr.iv
    %gepload481 = load double, double* %scevgep531, align 8, !tbaa !3
    %84 = fadd contract double %83, %gepload481
    store double %84, double* %scevgep531, align 8, !tbaa !3
    tail call void @llvm.csa.parallel.section.exit(i32 %43)
    %lsr.iv.next = add nsw i64 %lsr.iv, 1
    %condloop.203 = icmp slt i64 %lsr.iv.next, %0
    br i1 %condloop.203, label %loop.203, label %for.cond.cleanup81.loopexit
  }
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare i32 @llvm.csa.parallel.region.entry(i32) #1
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare void @llvm.csa.parallel.region.exit(i32) #1
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare i32 @llvm.csa.parallel.section.entry(i32) #1
  
  ; Function Attrs: inaccessiblemem_or_argmemonly nounwind
  declare void @llvm.csa.parallel.section.exit(i32) #1
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #2
  
  attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { inaccessiblemem_or_argmemonly nounwind }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2, !2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 8.0.0 (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-clang 53ef909f6145cef0d136b38ab35f7f0bd8cb7078) (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-llvm 910a0ae26f4da5a36bc27231c3f363d205a2daaf)"}
  !2 = !{!"clang version 8.0.0 (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-clang 53ef909f6145cef0d136b38ab35f7f0bd8cb7078) (ssh://git-amr-2.devtools.intel.com:29418/dpd_icl-llvm d26bb6e3270385a47365721fcd88679b193b71e6)"}
  !3 = !{!4, !4, i64 0}
  !4 = !{!"double", !5, i64 0}
  !5 = !{!"omnipotent char", !6, i64 0}
  !6 = !{!"Simple C++ TBAA"}

...
---
name:            _Z9vgh_inneriddddddPdS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_
alignment:       0
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
registers:       
  - { id: 0, class: i32, preferred-register: '' }
  - { id: 1, class: i32, preferred-register: '' }
  - { id: 2, class: i64, preferred-register: '' }
  - { id: 3, class: i64, preferred-register: '' }
  - { id: 4, class: i64, preferred-register: '' }
  - { id: 5, class: i64, preferred-register: '' }
  - { id: 6, class: i64, preferred-register: '' }
  - { id: 7, class: i64, preferred-register: '' }
  - { id: 8, class: i64, preferred-register: '' }
  - { id: 9, class: i64, preferred-register: '' }
  - { id: 10, class: i64, preferred-register: '' }
  - { id: 11, class: i64, preferred-register: '' }
  - { id: 12, class: i64, preferred-register: '' }
  - { id: 13, class: i64, preferred-register: '' }
  - { id: 14, class: ci64, preferred-register: '' }
  - { id: 15, class: i32, preferred-register: '' }
  - { id: 16, class: ci64, preferred-register: '' }
  - { id: 17, class: ci64, preferred-register: '' }
  - { id: 18, class: i32, preferred-register: '' }
  - { id: 19, class: ci64, preferred-register: '' }
  - { id: 20, class: ci64, preferred-register: '' }
  - { id: 21, class: ci0, preferred-register: '' }
  - { id: 22, class: ci0, preferred-register: '' }
  - { id: 23, class: ci64, preferred-register: '' }
  - { id: 24, class: ci64, preferred-register: '' }
  - { id: 25, class: ci64, preferred-register: '' }
  - { id: 26, class: ci64, preferred-register: '' }
  - { id: 27, class: ci64, preferred-register: '' }
  - { id: 28, class: ci64, preferred-register: '' }
  - { id: 29, class: ci64, preferred-register: '' }
  - { id: 30, class: ci64, preferred-register: '' }
  - { id: 31, class: ci64, preferred-register: '' }
  - { id: 32, class: ci64, preferred-register: '' }
  - { id: 33, class: ci64, preferred-register: '' }
  - { id: 34, class: ci64, preferred-register: '' }
  - { id: 35, class: ci64, preferred-register: '' }
  - { id: 36, class: ci64, preferred-register: '' }
  - { id: 37, class: ci64, preferred-register: '' }
  - { id: 38, class: ci64, preferred-register: '' }
  - { id: 39, class: ci64, preferred-register: '' }
  - { id: 40, class: ci64, preferred-register: '' }
  - { id: 41, class: ci64, preferred-register: '' }
  - { id: 42, class: ci64, preferred-register: '' }
  - { id: 43, class: ci64, preferred-register: '' }
  - { id: 44, class: ci64, preferred-register: '' }
  - { id: 45, class: ci64, preferred-register: '' }
  - { id: 46, class: ci64, preferred-register: '' }
  - { id: 47, class: ci1, preferred-register: '' }
  - { id: 48, class: ci64, preferred-register: '' }
  - { id: 49, class: ci64, preferred-register: '' }
  - { id: 50, class: ci64, preferred-register: '' }
  - { id: 51, class: ci64, preferred-register: '' }
  - { id: 52, class: ci64, preferred-register: '' }
  - { id: 53, class: ci64, preferred-register: '' }
  - { id: 54, class: ci64, preferred-register: '' }
  - { id: 55, class: ci64, preferred-register: '' }
  - { id: 56, class: ci64, preferred-register: '' }
  - { id: 57, class: ci64, preferred-register: '' }
  - { id: 58, class: ci64, preferred-register: '' }
  - { id: 59, class: ci64, preferred-register: '' }
  - { id: 60, class: ci64, preferred-register: '' }
  - { id: 61, class: ci64, preferred-register: '' }
  - { id: 62, class: ci64, preferred-register: '' }
  - { id: 63, class: ci64, preferred-register: '' }
  - { id: 64, class: ci64, preferred-register: '' }
  - { id: 65, class: ci64, preferred-register: '' }
  - { id: 66, class: ci64, preferred-register: '' }
  - { id: 67, class: ci64, preferred-register: '' }
  - { id: 68, class: ci64, preferred-register: '' }
  - { id: 69, class: ci64, preferred-register: '' }
  - { id: 70, class: ci64, preferred-register: '' }
  - { id: 71, class: ci64, preferred-register: '' }
  - { id: 72, class: ci64, preferred-register: '' }
  - { id: 73, class: i64, preferred-register: '' }
  - { id: 74, class: ci64, preferred-register: '' }
  - { id: 75, class: ci1, preferred-register: '' }
  - { id: 76, class: i32, preferred-register: '' }
  - { id: 77, class: ci64, preferred-register: '' }
  - { id: 78, class: ci64, preferred-register: '' }
  - { id: 79, class: ci64, preferred-register: '' }
  - { id: 80, class: ci64, preferred-register: '' }
  - { id: 81, class: i64, preferred-register: '' }
  - { id: 82, class: ci64, preferred-register: '' }
  - { id: 83, class: ci64, preferred-register: '' }
  - { id: 84, class: i64, preferred-register: '' }
  - { id: 85, class: ci64, preferred-register: '' }
  - { id: 86, class: ci64, preferred-register: '' }
  - { id: 87, class: i64, preferred-register: '' }
  - { id: 88, class: ci64, preferred-register: '' }
  - { id: 89, class: ci64, preferred-register: '' }
  - { id: 90, class: i64, preferred-register: '' }
  - { id: 91, class: ci64, preferred-register: '' }
  - { id: 92, class: ci64, preferred-register: '' }
  - { id: 93, class: ci64, preferred-register: '' }
  - { id: 94, class: ci64, preferred-register: '' }
  - { id: 95, class: ci64, preferred-register: '' }
  - { id: 96, class: ci64, preferred-register: '' }
  - { id: 97, class: ci64, preferred-register: '' }
  - { id: 98, class: ci64, preferred-register: '' }
  - { id: 99, class: ci64, preferred-register: '' }
  - { id: 100, class: ci64, preferred-register: '' }
  - { id: 101, class: ci64, preferred-register: '' }
  - { id: 102, class: ci64, preferred-register: '' }
  - { id: 103, class: ci64, preferred-register: '' }
  - { id: 104, class: ci64, preferred-register: '' }
  - { id: 105, class: ci64, preferred-register: '' }
  - { id: 106, class: ci64, preferred-register: '' }
  - { id: 107, class: ci64, preferred-register: '' }
  - { id: 108, class: ci64, preferred-register: '' }
  - { id: 109, class: ci64, preferred-register: '' }
  - { id: 110, class: ci64, preferred-register: '' }
  - { id: 111, class: ci64, preferred-register: '' }
  - { id: 112, class: ci64, preferred-register: '' }
  - { id: 113, class: i64, preferred-register: '' }
  - { id: 114, class: ci64, preferred-register: '' }
  - { id: 115, class: i64, preferred-register: '' }
  - { id: 116, class: ci64, preferred-register: '' }
  - { id: 117, class: i64, preferred-register: '' }
  - { id: 118, class: ci64, preferred-register: '' }
  - { id: 119, class: i64, preferred-register: '' }
  - { id: 120, class: ci64, preferred-register: '' }
  - { id: 121, class: i64, preferred-register: '' }
  - { id: 122, class: ci64, preferred-register: '' }
  - { id: 123, class: i64, preferred-register: '' }
  - { id: 124, class: ci64, preferred-register: '' }
  - { id: 125, class: i64, preferred-register: '' }
  - { id: 126, class: ci64, preferred-register: '' }
  - { id: 127, class: i64, preferred-register: '' }
  - { id: 128, class: ci64, preferred-register: '' }
  - { id: 129, class: i64, preferred-register: '' }
  - { id: 130, class: ci64, preferred-register: '' }
  - { id: 131, class: i64, preferred-register: '' }
  - { id: 132, class: ci64, preferred-register: '' }
  - { id: 133, class: i64, preferred-register: '' }
  - { id: 134, class: ci64, preferred-register: '' }
  - { id: 135, class: i64, preferred-register: '' }
  - { id: 136, class: ci64, preferred-register: '' }
  - { id: 137, class: i64, preferred-register: '' }
  - { id: 138, class: ci64, preferred-register: '' }
  - { id: 139, class: i64, preferred-register: '' }
  - { id: 140, class: ci64, preferred-register: '' }
  - { id: 141, class: i64, preferred-register: '' }
  - { id: 142, class: ci64, preferred-register: '' }
  - { id: 143, class: i64, preferred-register: '' }
  - { id: 144, class: ci64, preferred-register: '' }
  - { id: 145, class: i64, preferred-register: '' }
  - { id: 146, class: ci64, preferred-register: '' }
  - { id: 147, class: i64, preferred-register: '' }
  - { id: 148, class: ci64, preferred-register: '' }
  - { id: 149, class: i64, preferred-register: '' }
  - { id: 150, class: ci64, preferred-register: '' }
  - { id: 151, class: i64, preferred-register: '' }
  - { id: 152, class: ci64, preferred-register: '' }
  - { id: 153, class: ci1, preferred-register: '' }
  - { id: 154, class: i32, preferred-register: '' }
  - { id: 155, class: ci64, preferred-register: '' }
  - { id: 156, class: ci64, preferred-register: '' }
  - { id: 157, class: ci64, preferred-register: '' }
  - { id: 158, class: ci64, preferred-register: '' }
  - { id: 159, class: i64, preferred-register: '' }
  - { id: 160, class: ci64, preferred-register: '' }
  - { id: 161, class: ci64, preferred-register: '' }
  - { id: 162, class: i64, preferred-register: '' }
  - { id: 163, class: ci64, preferred-register: '' }
  - { id: 164, class: ci64, preferred-register: '' }
  - { id: 165, class: i64, preferred-register: '' }
  - { id: 166, class: ci64, preferred-register: '' }
  - { id: 167, class: ci64, preferred-register: '' }
  - { id: 168, class: i64, preferred-register: '' }
  - { id: 169, class: ci64, preferred-register: '' }
  - { id: 170, class: ci64, preferred-register: '' }
  - { id: 171, class: ci64, preferred-register: '' }
  - { id: 172, class: ci64, preferred-register: '' }
  - { id: 173, class: ci64, preferred-register: '' }
  - { id: 174, class: ci64, preferred-register: '' }
  - { id: 175, class: ci64, preferred-register: '' }
  - { id: 176, class: ci64, preferred-register: '' }
  - { id: 177, class: ci64, preferred-register: '' }
  - { id: 178, class: ci64, preferred-register: '' }
  - { id: 179, class: ci64, preferred-register: '' }
  - { id: 180, class: ci64, preferred-register: '' }
  - { id: 181, class: ci64, preferred-register: '' }
  - { id: 182, class: ci64, preferred-register: '' }
  - { id: 183, class: ci64, preferred-register: '' }
  - { id: 184, class: ci64, preferred-register: '' }
  - { id: 185, class: ci64, preferred-register: '' }
  - { id: 186, class: ci64, preferred-register: '' }
  - { id: 187, class: ci64, preferred-register: '' }
  - { id: 188, class: ci64, preferred-register: '' }
  - { id: 189, class: ci64, preferred-register: '' }
  - { id: 190, class: ci64, preferred-register: '' }
  - { id: 191, class: i64, preferred-register: '' }
  - { id: 192, class: ci64, preferred-register: '' }
  - { id: 193, class: i64, preferred-register: '' }
  - { id: 194, class: ci64, preferred-register: '' }
  - { id: 195, class: i64, preferred-register: '' }
  - { id: 196, class: ci64, preferred-register: '' }
  - { id: 197, class: i64, preferred-register: '' }
  - { id: 198, class: ci64, preferred-register: '' }
  - { id: 199, class: i64, preferred-register: '' }
  - { id: 200, class: ci64, preferred-register: '' }
  - { id: 201, class: i64, preferred-register: '' }
  - { id: 202, class: ci64, preferred-register: '' }
  - { id: 203, class: i64, preferred-register: '' }
  - { id: 204, class: ci64, preferred-register: '' }
  - { id: 205, class: i64, preferred-register: '' }
  - { id: 206, class: ci64, preferred-register: '' }
  - { id: 207, class: i64, preferred-register: '' }
  - { id: 208, class: ci64, preferred-register: '' }
  - { id: 209, class: i64, preferred-register: '' }
  - { id: 210, class: ci64, preferred-register: '' }
  - { id: 211, class: i64, preferred-register: '' }
  - { id: 212, class: ci64, preferred-register: '' }
  - { id: 213, class: i64, preferred-register: '' }
  - { id: 214, class: ci64, preferred-register: '' }
  - { id: 215, class: i64, preferred-register: '' }
  - { id: 216, class: ci64, preferred-register: '' }
  - { id: 217, class: i64, preferred-register: '' }
  - { id: 218, class: ci64, preferred-register: '' }
  - { id: 219, class: i64, preferred-register: '' }
  - { id: 220, class: ci64, preferred-register: '' }
  - { id: 221, class: i64, preferred-register: '' }
  - { id: 222, class: ci64, preferred-register: '' }
  - { id: 223, class: i64, preferred-register: '' }
  - { id: 224, class: ci64, preferred-register: '' }
  - { id: 225, class: i64, preferred-register: '' }
  - { id: 226, class: ci64, preferred-register: '' }
  - { id: 227, class: i64, preferred-register: '' }
  - { id: 228, class: ci64, preferred-register: '' }
  - { id: 229, class: i64, preferred-register: '' }
  - { id: 230, class: ci0, preferred-register: '' }
  - { id: 231, class: ci0, preferred-register: '' }
  - { id: 232, class: ci0, preferred-register: '' }
  - { id: 233, class: ci0, preferred-register: '' }
  - { id: 234, class: ci0, preferred-register: '' }
  - { id: 235, class: ci0, preferred-register: '' }
  - { id: 236, class: ci0, preferred-register: '' }
  - { id: 237, class: ci0, preferred-register: '' }
  - { id: 238, class: ci0, preferred-register: '' }
  - { id: 239, class: ci0, preferred-register: '' }
  - { id: 240, class: ci0, preferred-register: '' }
  - { id: 241, class: ci0, preferred-register: '' }
  - { id: 242, class: ci0, preferred-register: '' }
  - { id: 243, class: ci0, preferred-register: '' }
  - { id: 244, class: ci0, preferred-register: '' }
  - { id: 245, class: ci0, preferred-register: '' }
  - { id: 246, class: ci0, preferred-register: '' }
  - { id: 247, class: ci0, preferred-register: '' }
  - { id: 248, class: ci0, preferred-register: '' }
  - { id: 249, class: ci0, preferred-register: '' }
  - { id: 250, class: ci0, preferred-register: '' }
  - { id: 251, class: ci0, preferred-register: '' }
  - { id: 252, class: ci0, preferred-register: '' }
  - { id: 253, class: ci0, preferred-register: '' }
  - { id: 254, class: ci0, preferred-register: '' }
  - { id: 255, class: ci0, preferred-register: '' }
  - { id: 256, class: ci0, preferred-register: '' }
  - { id: 257, class: ci0, preferred-register: '' }
  - { id: 258, class: ci0, preferred-register: '' }
  - { id: 259, class: ci0, preferred-register: '' }
  - { id: 260, class: ci0, preferred-register: '' }
  - { id: 261, class: ci0, preferred-register: '' }
  - { id: 262, class: ci0, preferred-register: '' }
  - { id: 263, class: ci0, preferred-register: '' }
  - { id: 264, class: ci0, preferred-register: '' }
  - { id: 265, class: ci0, preferred-register: '' }
  - { id: 266, class: ci0, preferred-register: '' }
  - { id: 267, class: ci0, preferred-register: '' }
  - { id: 268, class: ci0, preferred-register: '' }
  - { id: 269, class: ci0, preferred-register: '' }
  - { id: 270, class: ci0, preferred-register: '' }
  - { id: 271, class: ci0, preferred-register: '' }
  - { id: 272, class: ci0, preferred-register: '' }
  - { id: 273, class: ci0, preferred-register: '' }
  - { id: 274, class: ci0, preferred-register: '' }
  - { id: 275, class: ci0, preferred-register: '' }
  - { id: 276, class: ci0, preferred-register: '' }
  - { id: 277, class: ci0, preferred-register: '' }
  - { id: 278, class: ci0, preferred-register: '' }
  - { id: 279, class: ci0, preferred-register: '' }
  - { id: 280, class: ci0, preferred-register: '' }
  - { id: 281, class: ci0, preferred-register: '' }
  - { id: 282, class: ci0, preferred-register: '' }
  - { id: 283, class: ci0, preferred-register: '' }
  - { id: 284, class: ci0, preferred-register: '' }
  - { id: 285, class: ci0, preferred-register: '' }
  - { id: 286, class: ci0, preferred-register: '' }
  - { id: 287, class: ci0, preferred-register: '' }
  - { id: 288, class: ci0, preferred-register: '' }
  - { id: 289, class: ci0, preferred-register: '' }
  - { id: 290, class: ci0, preferred-register: '' }
  - { id: 291, class: ci0, preferred-register: '' }
  - { id: 292, class: ci0, preferred-register: '' }
  - { id: 293, class: ci0, preferred-register: '' }
  - { id: 294, class: ci0, preferred-register: '' }
  - { id: 295, class: ci0, preferred-register: '' }
  - { id: 296, class: ci64, preferred-register: '' }
  - { id: 297, class: ci64, preferred-register: '' }
  - { id: 298, class: i64, preferred-register: '' }
  - { id: 299, class: ci64, preferred-register: '' }
  - { id: 300, class: i64, preferred-register: '' }
  - { id: 301, class: ci64, preferred-register: '' }
  - { id: 302, class: i64, preferred-register: '' }
  - { id: 303, class: ci64, preferred-register: '' }
  - { id: 304, class: i64, preferred-register: '' }
  - { id: 305, class: ci64, preferred-register: '' }
  - { id: 306, class: ci0, preferred-register: '' }
  - { id: 307, class: ci0, preferred-register: '' }
  - { id: 308, class: ci0, preferred-register: '' }
  - { id: 309, class: ci0, preferred-register: '' }
  - { id: 310, class: ci0, preferred-register: '' }
  - { id: 311, class: ci0, preferred-register: '' }
  - { id: 312, class: ci0, preferred-register: '' }
  - { id: 313, class: ci0, preferred-register: '' }
  - { id: 314, class: ci64, preferred-register: '' }
  - { id: 315, class: ci64, preferred-register: '' }
  - { id: 316, class: ci64, preferred-register: '' }
  - { id: 317, class: ci64, preferred-register: '' }
  - { id: 318, class: ci64, preferred-register: '' }
  - { id: 319, class: ci64, preferred-register: '' }
  - { id: 320, class: ci64, preferred-register: '' }
  - { id: 321, class: ci64, preferred-register: '' }
  - { id: 322, class: ci64, preferred-register: '' }
  - { id: 323, class: ci64, preferred-register: '' }
  - { id: 324, class: ci64, preferred-register: '' }
  - { id: 325, class: ci64, preferred-register: '' }
  - { id: 326, class: ci64, preferred-register: '' }
  - { id: 327, class: ci64, preferred-register: '' }
  - { id: 328, class: ci64, preferred-register: '' }
  - { id: 329, class: ci64, preferred-register: '' }
  - { id: 330, class: ci64, preferred-register: '' }
  - { id: 331, class: ci64, preferred-register: '' }
  - { id: 332, class: ci64, preferred-register: '' }
  - { id: 333, class: ci64, preferred-register: '' }
  - { id: 334, class: ci64, preferred-register: '' }
  - { id: 335, class: ci64, preferred-register: '' }
  - { id: 336, class: ci64, preferred-register: '' }
  - { id: 337, class: ci64, preferred-register: '' }
  - { id: 338, class: ci64, preferred-register: '' }
  - { id: 339, class: ci64, preferred-register: '' }
  - { id: 340, class: ci64, preferred-register: '' }
  - { id: 341, class: ci64, preferred-register: '' }
  - { id: 342, class: ci64, preferred-register: '' }
  - { id: 343, class: ci64, preferred-register: '' }
  - { id: 344, class: ci64, preferred-register: '' }
  - { id: 345, class: ci64, preferred-register: '' }
  - { id: 346, class: ci64, preferred-register: '' }
  - { id: 347, class: ci64, preferred-register: '' }
  - { id: 348, class: ci64, preferred-register: '' }
  - { id: 349, class: ci64, preferred-register: '' }
  - { id: 350, class: ci64, preferred-register: '' }
  - { id: 351, class: ci64, preferred-register: '' }
  - { id: 352, class: ci64, preferred-register: '' }
  - { id: 353, class: ci64, preferred-register: '' }
  - { id: 354, class: ci64, preferred-register: '' }
  - { id: 355, class: ci64, preferred-register: '' }
  - { id: 356, class: ci64, preferred-register: '' }
  - { id: 357, class: ci64, preferred-register: '' }
  - { id: 358, class: ci64, preferred-register: '' }
  - { id: 359, class: ci64, preferred-register: '' }
  - { id: 360, class: ci64, preferred-register: '' }
  - { id: 361, class: ci64, preferred-register: '' }
  - { id: 362, class: ci64, preferred-register: '' }
  - { id: 363, class: ci64, preferred-register: '' }
  - { id: 364, class: ci64, preferred-register: '' }
  - { id: 365, class: ci64, preferred-register: '' }
  - { id: 366, class: ci64, preferred-register: '' }
  - { id: 367, class: ci64, preferred-register: '' }
  - { id: 368, class: ci64, preferred-register: '' }
  - { id: 369, class: ci64, preferred-register: '' }
  - { id: 370, class: ci64, preferred-register: '' }
  - { id: 371, class: ci64, preferred-register: '' }
  - { id: 372, class: ci64, preferred-register: '' }
  - { id: 373, class: ci64, preferred-register: '' }
  - { id: 374, class: ci64, preferred-register: '' }
  - { id: 375, class: ci64, preferred-register: '' }
  - { id: 376, class: ci64, preferred-register: '' }
  - { id: 377, class: ci64, preferred-register: '' }
  - { id: 378, class: ci64, preferred-register: '' }
  - { id: 379, class: ci64, preferred-register: '' }
  - { id: 380, class: ci64, preferred-register: '' }
  - { id: 381, class: ci64, preferred-register: '' }
  - { id: 382, class: ci64, preferred-register: '' }
  - { id: 383, class: ci64, preferred-register: '' }
  - { id: 384, class: ci64, preferred-register: '' }
  - { id: 385, class: ci64, preferred-register: '' }
  - { id: 386, class: ci64, preferred-register: '' }
  - { id: 387, class: ci64, preferred-register: '' }
  - { id: 388, class: ci64, preferred-register: '' }
  - { id: 389, class: ci64, preferred-register: '' }
  - { id: 390, class: ci64, preferred-register: '' }
  - { id: 391, class: ci64, preferred-register: '' }
  - { id: 392, class: ci64, preferred-register: '' }
  - { id: 393, class: ci64, preferred-register: '' }
  - { id: 394, class: ci64, preferred-register: '' }
  - { id: 395, class: ci64, preferred-register: '' }
  - { id: 396, class: ci64, preferred-register: '' }
  - { id: 397, class: ci64, preferred-register: '' }
  - { id: 398, class: ci64, preferred-register: '' }
  - { id: 399, class: ci64, preferred-register: '' }
  - { id: 400, class: ci64, preferred-register: '' }
  - { id: 401, class: ci64, preferred-register: '' }
  - { id: 402, class: ci64, preferred-register: '' }
  - { id: 403, class: ci64, preferred-register: '' }
  - { id: 404, class: ci64, preferred-register: '' }
  - { id: 405, class: ci64, preferred-register: '' }
  - { id: 406, class: ci64, preferred-register: '' }
  - { id: 407, class: ci64, preferred-register: '' }
  - { id: 408, class: ci64, preferred-register: '' }
  - { id: 409, class: ci64, preferred-register: '' }
  - { id: 410, class: ci64, preferred-register: '' }
  - { id: 411, class: ci64, preferred-register: '' }
  - { id: 412, class: ci64, preferred-register: '' }
  - { id: 413, class: ci64, preferred-register: '' }
  - { id: 414, class: ci64, preferred-register: '' }
  - { id: 415, class: ci64, preferred-register: '' }
  - { id: 416, class: ci64, preferred-register: '' }
  - { id: 417, class: ci64, preferred-register: '' }
  - { id: 418, class: ci64, preferred-register: '' }
  - { id: 419, class: ci64, preferred-register: '' }
  - { id: 420, class: ci64, preferred-register: '' }
  - { id: 421, class: ci64, preferred-register: '' }
  - { id: 422, class: ci64, preferred-register: '' }
  - { id: 423, class: ci64, preferred-register: '' }
  - { id: 424, class: ci64, preferred-register: '' }
  - { id: 425, class: ci64, preferred-register: '' }
  - { id: 426, class: ci64, preferred-register: '' }
  - { id: 427, class: ci64, preferred-register: '' }
  - { id: 428, class: ci64, preferred-register: '' }
  - { id: 429, class: ci64, preferred-register: '' }
  - { id: 430, class: ci64, preferred-register: '' }
  - { id: 431, class: ci64, preferred-register: '' }
  - { id: 432, class: ci64, preferred-register: '' }
  - { id: 433, class: ci64, preferred-register: '' }
  - { id: 434, class: ci64, preferred-register: '' }
  - { id: 435, class: ci64, preferred-register: '' }
  - { id: 436, class: ci64, preferred-register: '' }
  - { id: 437, class: ci64, preferred-register: '' }
  - { id: 438, class: ci64, preferred-register: '' }
  - { id: 439, class: ci64, preferred-register: '' }
  - { id: 440, class: ci64, preferred-register: '' }
  - { id: 441, class: ci64, preferred-register: '' }
  - { id: 442, class: ci64, preferred-register: '' }
  - { id: 443, class: ci64, preferred-register: '' }
  - { id: 444, class: ci64, preferred-register: '' }
  - { id: 445, class: ci64, preferred-register: '' }
  - { id: 446, class: ci64, preferred-register: '' }
  - { id: 447, class: ci64, preferred-register: '' }
  - { id: 448, class: ci64, preferred-register: '' }
  - { id: 449, class: ci64, preferred-register: '' }
  - { id: 450, class: ci64, preferred-register: '' }
  - { id: 451, class: ci64, preferred-register: '' }
  - { id: 452, class: ci64, preferred-register: '' }
  - { id: 453, class: ci64, preferred-register: '' }
  - { id: 454, class: ci64, preferred-register: '' }
  - { id: 455, class: ci64, preferred-register: '' }
  - { id: 456, class: ci64, preferred-register: '' }
  - { id: 457, class: ci64, preferred-register: '' }
  - { id: 458, class: ci64, preferred-register: '' }
  - { id: 459, class: ci64, preferred-register: '' }
  - { id: 460, class: ci64, preferred-register: '' }
  - { id: 461, class: ci64, preferred-register: '' }
  - { id: 462, class: ci64, preferred-register: '' }
  - { id: 463, class: ci64, preferred-register: '' }
  - { id: 464, class: ci64, preferred-register: '' }
  - { id: 465, class: ci64, preferred-register: '' }
  - { id: 466, class: ci64, preferred-register: '' }
  - { id: 467, class: ci64, preferred-register: '' }
  - { id: 468, class: ci64, preferred-register: '' }
  - { id: 469, class: ci64, preferred-register: '' }
  - { id: 470, class: ci64, preferred-register: '' }
  - { id: 471, class: ci64, preferred-register: '' }
  - { id: 472, class: ci64, preferred-register: '' }
  - { id: 473, class: ci64, preferred-register: '' }
  - { id: 474, class: ci64, preferred-register: '' }
  - { id: 475, class: ci64, preferred-register: '' }
  - { id: 476, class: ci64, preferred-register: '' }
  - { id: 477, class: ci64, preferred-register: '' }
  - { id: 478, class: ci64, preferred-register: '' }
  - { id: 479, class: ci64, preferred-register: '' }
  - { id: 480, class: ci64, preferred-register: '' }
  - { id: 481, class: ci64, preferred-register: '' }
  - { id: 482, class: i64, preferred-register: '' }
  - { id: 483, class: ci64, preferred-register: '' }
  - { id: 484, class: ci64, preferred-register: '' }
  - { id: 485, class: ci64, preferred-register: '' }
  - { id: 486, class: i64, preferred-register: '' }
  - { id: 487, class: ci64, preferred-register: '' }
  - { id: 488, class: i64, preferred-register: '' }
  - { id: 489, class: ci64, preferred-register: '' }
  - { id: 490, class: ci64, preferred-register: '' }
  - { id: 491, class: ci64, preferred-register: '' }
  - { id: 492, class: i64, preferred-register: '' }
  - { id: 493, class: ci64, preferred-register: '' }
  - { id: 494, class: i64, preferred-register: '' }
  - { id: 495, class: ci64, preferred-register: '' }
  - { id: 496, class: ci64, preferred-register: '' }
  - { id: 497, class: ci64, preferred-register: '' }
  - { id: 498, class: i64, preferred-register: '' }
  - { id: 499, class: ci64, preferred-register: '' }
  - { id: 500, class: i64, preferred-register: '' }
  - { id: 501, class: ci64, preferred-register: '' }
  - { id: 502, class: ci64, preferred-register: '' }
  - { id: 503, class: ci64, preferred-register: '' }
  - { id: 504, class: i64, preferred-register: '' }
  - { id: 505, class: ci64, preferred-register: '' }
  - { id: 506, class: i64, preferred-register: '' }
  - { id: 507, class: ci64, preferred-register: '' }
  - { id: 508, class: ci64, preferred-register: '' }
  - { id: 509, class: ci64, preferred-register: '' }
  - { id: 510, class: i64, preferred-register: '' }
  - { id: 511, class: ci64, preferred-register: '' }
  - { id: 512, class: i64, preferred-register: '' }
  - { id: 513, class: ci64, preferred-register: '' }
  - { id: 514, class: ci64, preferred-register: '' }
  - { id: 515, class: ci64, preferred-register: '' }
  - { id: 516, class: i64, preferred-register: '' }
  - { id: 517, class: ci64, preferred-register: '' }
  - { id: 518, class: i64, preferred-register: '' }
  - { id: 519, class: ci64, preferred-register: '' }
  - { id: 520, class: ci64, preferred-register: '' }
  - { id: 521, class: ci64, preferred-register: '' }
  - { id: 522, class: i64, preferred-register: '' }
  - { id: 523, class: ci64, preferred-register: '' }
  - { id: 524, class: i64, preferred-register: '' }
  - { id: 525, class: ci64, preferred-register: '' }
  - { id: 526, class: ci64, preferred-register: '' }
  - { id: 527, class: ci64, preferred-register: '' }
  - { id: 528, class: i64, preferred-register: '' }
  - { id: 529, class: ci64, preferred-register: '' }
  - { id: 530, class: i64, preferred-register: '' }
  - { id: 531, class: ci64, preferred-register: '' }
  - { id: 532, class: ci64, preferred-register: '' }
  - { id: 533, class: ci64, preferred-register: '' }
  - { id: 534, class: i64, preferred-register: '' }
  - { id: 535, class: ci64, preferred-register: '' }
  - { id: 536, class: i64, preferred-register: '' }
  - { id: 537, class: ci64, preferred-register: '' }
  - { id: 538, class: ci64, preferred-register: '' }
  - { id: 539, class: ci64, preferred-register: '' }
  - { id: 540, class: i64, preferred-register: '' }
  - { id: 541, class: ci64, preferred-register: '' }
  - { id: 542, class: i64, preferred-register: '' }
  - { id: 543, class: ci64, preferred-register: '' }
  - { id: 544, class: ci64, preferred-register: '' }
  - { id: 545, class: ci64, preferred-register: '' }
  - { id: 546, class: i64, preferred-register: '' }
  - { id: 547, class: ci64, preferred-register: '' }
  - { id: 548, class: i64, preferred-register: '' }
  - { id: 549, class: ci64, preferred-register: '' }
  - { id: 550, class: ci64, preferred-register: '' }
  - { id: 551, class: ci64, preferred-register: '' }
  - { id: 552, class: i64, preferred-register: '' }
  - { id: 553, class: ci64, preferred-register: '' }
  - { id: 554, class: i64, preferred-register: '' }
  - { id: 555, class: ci64, preferred-register: '' }
  - { id: 556, class: i64, preferred-register: '' }
  - { id: 557, class: ci64, preferred-register: '' }
  - { id: 558, class: ci0, preferred-register: '' }
  - { id: 559, class: ci0, preferred-register: '' }
  - { id: 560, class: ci0, preferred-register: '' }
  - { id: 561, class: ci0, preferred-register: '' }
  - { id: 562, class: ci0, preferred-register: '' }
  - { id: 563, class: ci0, preferred-register: '' }
  - { id: 564, class: ci0, preferred-register: '' }
  - { id: 565, class: ci0, preferred-register: '' }
  - { id: 566, class: ci0, preferred-register: '' }
  - { id: 567, class: ci0, preferred-register: '' }
  - { id: 568, class: ci0, preferred-register: '' }
  - { id: 569, class: ci0, preferred-register: '' }
  - { id: 570, class: ci0, preferred-register: '' }
  - { id: 571, class: ci0, preferred-register: '' }
  - { id: 572, class: ci0, preferred-register: '' }
  - { id: 573, class: ci0, preferred-register: '' }
  - { id: 574, class: ci0, preferred-register: '' }
  - { id: 575, class: ci0, preferred-register: '' }
  - { id: 576, class: ci0, preferred-register: '' }
  - { id: 577, class: ci0, preferred-register: '' }
  - { id: 578, class: ci0, preferred-register: '' }
  - { id: 579, class: ci0, preferred-register: '' }
  - { id: 580, class: ci0, preferred-register: '' }
  - { id: 581, class: ci0, preferred-register: '' }
  - { id: 582, class: ci0, preferred-register: '' }
  - { id: 583, class: ci0, preferred-register: '' }
  - { id: 584, class: ci0, preferred-register: '' }
  - { id: 585, class: ci0, preferred-register: '' }
  - { id: 586, class: ci0, preferred-register: '' }
  - { id: 587, class: ci0, preferred-register: '' }
  - { id: 588, class: ci0, preferred-register: '' }
  - { id: 589, class: ci0, preferred-register: '' }
  - { id: 590, class: ci0, preferred-register: '' }
  - { id: 591, class: ci0, preferred-register: '' }
  - { id: 592, class: ci0, preferred-register: '' }
  - { id: 593, class: ci0, preferred-register: '' }
  - { id: 594, class: ci0, preferred-register: '' }
  - { id: 595, class: ci0, preferred-register: '' }
  - { id: 596, class: ci0, preferred-register: '' }
  - { id: 597, class: ci0, preferred-register: '' }
  - { id: 598, class: ci0, preferred-register: '' }
  - { id: 599, class: ci0, preferred-register: '' }
  - { id: 600, class: ci0, preferred-register: '' }
  - { id: 601, class: ci0, preferred-register: '' }
  - { id: 602, class: ci0, preferred-register: '' }
  - { id: 603, class: ci0, preferred-register: '' }
  - { id: 604, class: ci0, preferred-register: '' }
  - { id: 605, class: ci0, preferred-register: '' }
  - { id: 606, class: ci0, preferred-register: '' }
  - { id: 607, class: ci0, preferred-register: '' }
  - { id: 608, class: ci0, preferred-register: '' }
  - { id: 609, class: ci0, preferred-register: '' }
  - { id: 610, class: ci0, preferred-register: '' }
  - { id: 611, class: ci0, preferred-register: '' }
  - { id: 612, class: ci0, preferred-register: '' }
  - { id: 613, class: ci0, preferred-register: '' }
  - { id: 614, class: ci0, preferred-register: '' }
  - { id: 615, class: ci0, preferred-register: '' }
  - { id: 616, class: ci0, preferred-register: '' }
  - { id: 617, class: ci0, preferred-register: '' }
  - { id: 618, class: ci0, preferred-register: '' }
  - { id: 619, class: ci0, preferred-register: '' }
  - { id: 620, class: ci0, preferred-register: '' }
  - { id: 621, class: ci0, preferred-register: '' }
  - { id: 622, class: ci0, preferred-register: '' }
  - { id: 623, class: ci0, preferred-register: '' }
  - { id: 624, class: ci0, preferred-register: '' }
  - { id: 625, class: ci0, preferred-register: '' }
  - { id: 626, class: ci0, preferred-register: '' }
  - { id: 627, class: ci0, preferred-register: '' }
  - { id: 628, class: ci0, preferred-register: '' }
  - { id: 629, class: ci0, preferred-register: '' }
  - { id: 630, class: ci1, preferred-register: '' }
  - { id: 631, class: ci1, preferred-register: '' }
  - { id: 632, class: ci1, preferred-register: '' }
  - { id: 633, class: ci1, preferred-register: '' }
  - { id: 634, class: ci1, preferred-register: '' }
  - { id: 635, class: ci1, preferred-register: '' }
  - { id: 636, class: ci1, preferred-register: '' }
  - { id: 637, class: ci1, preferred-register: '' }
  - { id: 638, class: ci1, preferred-register: '' }
liveins:         
  - { reg: '$p64_2', virtual-reg: '%23' }
  - { reg: '$p64_3', virtual-reg: '%24' }
  - { reg: '$p64_4', virtual-reg: '%25' }
  - { reg: '$p64_5', virtual-reg: '%26' }
  - { reg: '$p64_6', virtual-reg: '%27' }
  - { reg: '$p64_7', virtual-reg: '%28' }
  - { reg: '$p64_8', virtual-reg: '%29' }
  - { reg: '$p64_9', virtual-reg: '%30' }
  - { reg: '$p64_10', virtual-reg: '%31' }
  - { reg: '$p64_11', virtual-reg: '%32' }
  - { reg: '$p64_12', virtual-reg: '%33' }
  - { reg: '$p64_13', virtual-reg: '%34' }
  - { reg: '$p64_14', virtual-reg: '%35' }
  - { reg: '$p64_15', virtual-reg: '%36' }
  - { reg: '$p64_16', virtual-reg: '%37' }
  - { reg: '$p64_17', virtual-reg: '%38' }
  - { reg: '$p64_18', virtual-reg: '%39' }
  - { reg: '$p64_19', virtual-reg: '%40' }
  - { reg: '$p64_20', virtual-reg: '%41' }
  - { reg: '$p64_21', virtual-reg: '%42' }
  - { reg: '$p64_22', virtual-reg: '%43' }
  - { reg: '$p64_23', virtual-reg: '%44' }
  - { reg: '$p64_24', virtual-reg: '%45' }
  - { reg: '$p64_25', virtual-reg: '%46' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      
stack:           
constants:       
body:             |
  bb.0.entry:
    liveins: $p64_2, $p64_3, $p64_4, $p64_5, $p64_6, $p64_7, $p64_8, $p64_9, $p64_10, $p64_11, $p64_12, $p64_13, $p64_14, $p64_15, $p64_16, $p64_17, $p64_18, $p64_19, $p64_20, $p64_21, $p64_22, $p64_23, $p64_24, $p64_25
  
    %21:ci0 = MOV0 $ra
    %46:ci64 = COPY $p64_25
    %45:ci64 = COPY $p64_24
    %44:ci64 = COPY $p64_23
    %43:ci64 = COPY $p64_22
    %42:ci64 = COPY $p64_21
    %41:ci64 = COPY $p64_20
    %40:ci64 = COPY $p64_19
    %39:ci64 = COPY $p64_18
    %38:ci64 = COPY $p64_17
    %37:ci64 = COPY $p64_16
    %36:ci64 = COPY $p64_15
    %35:ci64 = COPY $p64_14
    %34:ci64 = COPY $p64_13
    %33:ci64 = COPY $p64_12
    %32:ci64 = COPY $p64_11
    %31:ci64 = COPY $p64_10
    %30:ci64 = COPY $p64_9
    %29:ci64 = COPY $p64_8
    %28:ci64 = COPY $p64_7
    %27:ci64 = COPY $p64_6
    %26:ci64 = COPY $p64_5
    %25:ci64 = COPY $p64_4
    %24:ci64 = COPY $p64_3
    %23:ci64 = COPY $p64_2
    %47:ci1 = CMPGTS32 %23, 0
    %307:ci0 = FILTER0 %47, %21
    %315:ci64 = FILTER64 %47, %23
    %317:ci64 = FILTER64 %47, %24
    %325:ci64 = FILTER64 %47, %25
    %333:ci64 = FILTER64 %47, %26
    %341:ci64 = FILTER64 %47, %27
    %349:ci64 = FILTER64 %47, %28
    %357:ci64 = FILTER64 %47, %29
    %365:ci64 = FILTER64 %47, %30
    %373:ci64 = FILTER64 %47, %31
    %381:ci64 = FILTER64 %47, %32
    %389:ci64 = FILTER64 %47, %33
    %397:ci64 = FILTER64 %47, %34
    %399:ci64 = FILTER64 %47, %35
    %401:ci64 = FILTER64 %47, %36
    %403:ci64 = FILTER64 %47, %37
    %411:ci64 = FILTER64 %47, %38
    %419:ci64 = FILTER64 %47, %39
    %427:ci64 = FILTER64 %47, %40
    %435:ci64 = FILTER64 %47, %41
    %443:ci64 = FILTER64 %47, %42
    %451:ci64 = FILTER64 %47, %43
    %459:ci64 = FILTER64 %47, %44
    %467:ci64 = FILTER64 %47, %45
    %475:ci64 = FILTER64 %47, %46
    %638:ci1 = NOT1 %47
    %49:ci64, $ign = LD64 %397, 3, %307 :: (load 8 from %ir.c, !tbaa !3)
    %51:ci64, $ign = LD64D %397, 8, 3, %307 :: (load 8 from %ir.arrayidx8, !tbaa !3)
    %53:ci64, $ign = LD64D %397, 16, 3, %307 :: (load 8 from %ir.arrayidx10, !tbaa !3)
    %55:ci64, $ign = LD64D %397, 24, 3, %307 :: (load 8 from %ir.arrayidx13, !tbaa !3)
    %57:ci64, $ign = LD64 %399, 3, %307 :: (load 8 from %ir.dc, !tbaa !3)
    %59:ci64, $ign = LD64D %399, 8, 3, %307 :: (load 8 from %ir.arrayidx18, !tbaa !3)
    %61:ci64, $ign = LD64D %399, 16, 3, %307 :: (load 8 from %ir.arrayidx21, !tbaa !3)
    %63:ci64, $ign = LD64D %399, 24, 3, %307 :: (load 8 from %ir.arrayidx24, !tbaa !3)
    %65:ci64, $ign = LD64 %401, 3, %307 :: (load 8 from %ir.d2c, !tbaa !3)
    %67:ci64, $ign = LD64D %401, 8, 3, %307 :: (load 8 from %ir.arrayidx29, !tbaa !3)
    %69:ci64, $ign = LD64D %401, 16, 3, %307 :: (load 8 from %ir.arrayidx32, !tbaa !3)
    %71:ci64, $ign = LD64D %401, 24, 3, %307 :: (load 8 from %ir.arrayidx35, !tbaa !3)
    %74:ci64 = SEXT64 %315, 32
    %14:ci64 = ADD64 killed %74, -1
    %16:ci64, $ign, $ign, %633:ci1 = SEQOTLTS64 -1, %14, 1
    %75:ci1 = NOT1 %633
    %308:ci0 = REPEATO0 %75, %307
    %318:ci64 = REPEATO64 %75, %317
    %326:ci64 = REPEATO64 %75, %325
    %334:ci64 = REPEATO64 %75, %333
    %342:ci64 = REPEATO64 %75, %341
    %350:ci64 = REPEATO64 %75, %349
    %358:ci64 = REPEATO64 %75, %357
    %366:ci64 = REPEATO64 %75, %365
    %374:ci64 = REPEATO64 %75, %373
    %382:ci64 = REPEATO64 %75, %381
    %390:ci64 = REPEATO64 %75, %389
    %404:ci64 = REPEATO64 %75, %403
    %412:ci64 = REPEATO64 %75, %411
    %420:ci64 = REPEATO64 %75, %419
    %428:ci64 = REPEATO64 %75, %427
    %436:ci64 = REPEATO64 %75, %435
    %444:ci64 = REPEATO64 %75, %443
    %452:ci64 = REPEATO64 %75, %451
    %460:ci64 = REPEATO64 %75, %459
    %468:ci64 = REPEATO64 %75, %467
    %476:ci64 = REPEATO64 %75, %475
    %484:ci64 = REPEATO64 %75, %49
    %490:ci64 = REPEATO64 %75, %51
    %496:ci64 = REPEATO64 %75, %53
    %502:ci64 = REPEATO64 %75, %55
    %508:ci64 = REPEATO64 %75, %57
    %514:ci64 = REPEATO64 %75, %59
    %520:ci64 = REPEATO64 %75, %61
    %526:ci64 = REPEATO64 %75, %63
    %532:ci64 = REPEATO64 %75, %65
    %538:ci64 = REPEATO64 %75, %67
    %544:ci64 = REPEATO64 %75, %69
    %550:ci64 = REPEATO64 %75, %71
    %77:ci64 = SLL64 %16, 3
    %78:ci64 = ADD64 %476, %77
    %79:ci64 = ADD64 %390, %77
    %80:ci64, $ign = LD64D killed %79, 8, 3, %308 :: (load 8 from %ir.scevgep581, !tbaa !3)
    %82:ci64 = ADD64 %382, %77
    %83:ci64, $ign = LD64D killed %82, 8, 3, %308 :: (load 8 from %ir.scevgep583, !tbaa !3)
    %85:ci64 = ADD64 %366, %77
    %86:ci64, $ign = LD64D killed %85, 8, 3, %308 :: (load 8 from %ir.scevgep587, !tbaa !3)
    %88:ci64 = ADD64 %374, %77
    %89:ci64, $ign = LD64D killed %88, 8, 3, %308 :: (load 8 from %ir.scevgep585, !tbaa !3)
    %91:ci64 = contract MULF64 %89, %490, 0
    %92:ci64 = contract FMAF64 %86, %484, killed %91, 0
    %93:ci64 = contract FMAF64 %83, %496, killed %92, 0
    %94:ci64 = contract FMAF64 %80, %502, killed %93, 0
    %95:ci64 = ADD64 %468, %77
    %96:ci64 = contract MULF64 %89, %514, 0
    %97:ci64 = contract FMAF64 %86, %508, killed %96, 0
    %98:ci64 = contract FMAF64 %83, %520, killed %97, 0
    %99:ci64 = contract FMAF64 %80, %526, killed %98, 0
    %100:ci64 = ADD64 %460, %77
    %101:ci64 = ADD64 %452, %77
    %102:ci64 = ADD64 %444, %77
    %103:ci64 = contract MULF64 %89, %538, 0
    %104:ci64 = contract FMAF64 %86, %532, killed %103, 0
    %105:ci64 = contract FMAF64 %83, %544, killed %104, 0
    %106:ci64 = contract FMAF64 %80, %550, killed %105, 0
    %107:ci64 = ADD64 %436, %77
    %108:ci64 = ADD64 %428, %77
    %109:ci64 = ADD64 %420, %77
    %110:ci64 = ADD64 %412, %77
    %111:ci64 = ADD64 %404, %77
    %112:ci64, $ign = LD64D %111, 8, 3, %308 :: (load 8 from %ir.scevgep579, !tbaa !3)
    %114:ci64 = contract FMAF64 %94, %318, %112, 0
    %247:ci0 = ST64D %111, 8, %114, 3, $ign :: (store 8 into %ir.scevgep579, !tbaa !3)
    %116:ci64, $ign = LD64D %110, 8, 3, %308 :: (load 8 from %ir.scevgep577, !tbaa !3)
    %118:ci64 = contract FMAF64 %94, %342, %116, 0
    %249:ci0 = ST64D %110, 8, %118, 3, $ign :: (store 8 into %ir.scevgep577, !tbaa !3)
    %120:ci64, $ign = LD64D %109, 8, 3, %308 :: (load 8 from %ir.scevgep575, !tbaa !3)
    %122:ci64 = contract FMAF64 %99, %326, %120, 0
    %251:ci0 = ST64D %109, 8, %122, 3, $ign :: (store 8 into %ir.scevgep575, !tbaa !3)
    %124:ci64, $ign = LD64D %108, 8, 3, %308 :: (load 8 from %ir.scevgep573, !tbaa !3)
    %126:ci64 = contract FMAF64 %94, %358, %124, 0
    %253:ci0 = ST64D %108, 8, %126, 3, $ign :: (store 8 into %ir.scevgep573, !tbaa !3)
    %128:ci64, $ign = LD64D %107, 8, 3, %308 :: (load 8 from %ir.scevgep571, !tbaa !3)
    %130:ci64 = contract FMAF64 %99, %350, %128, 0
    %255:ci0 = ST64D %107, 8, %130, 3, $ign :: (store 8 into %ir.scevgep571, !tbaa !3)
    %132:ci64, $ign = LD64D %102, 8, 3, %308 :: (load 8 from %ir.scevgep569, !tbaa !3)
    %134:ci64 = contract FMAF64 killed %106, %334, %132, 0
    %257:ci0 = ST64D %102, 8, %134, 3, $ign :: (store 8 into %ir.scevgep569, !tbaa !3)
    %136:ci64, $ign = LD64D %101, 8, 3, %308 :: (load 8 from %ir.scevgep567, !tbaa !3)
    %138:ci64 = contract FMAF64 %94, %326, %136, 0
    %259:ci0 = ST64D %101, 8, %138, 3, $ign :: (store 8 into %ir.scevgep567, !tbaa !3)
    %140:ci64, $ign = LD64D %100, 8, 3, %308 :: (load 8 from %ir.scevgep565, !tbaa !3)
    %142:ci64 = contract FMAF64 %94, %350, %140, 0
    %261:ci0 = ST64D %100, 8, %142, 3, $ign :: (store 8 into %ir.scevgep565, !tbaa !3)
    %144:ci64, $ign = LD64D %95, 8, 3, %308 :: (load 8 from %ir.scevgep563, !tbaa !3)
    %146:ci64 = contract FMAF64 %99, %334, %144, 0
    %263:ci0 = ST64D %95, 8, %146, 3, $ign :: (store 8 into %ir.scevgep563, !tbaa !3)
    %148:ci64, $ign = LD64D %78, 8, 3, %308 :: (load 8 from %ir.scevgep561, !tbaa !3)
    %150:ci64 = contract FMAF64 %94, %334, %148, 0
    %265:ci0 = ST64D %78, 8, %150, 3, $ign :: (store 8 into %ir.scevgep561, !tbaa !3)
    %558:ci0 = FILTER0 %633, %247
    %563:ci0 = FILTER0 %633, %249
    %568:ci0 = FILTER0 %633, %251
    %573:ci0 = FILTER0 %633, %253
    %578:ci0 = FILTER0 %633, %255
    %583:ci0 = FILTER0 %633, %257
    %588:ci0 = FILTER0 %633, %259
    %593:ci0 = FILTER0 %633, %261
    %598:ci0 = FILTER0 %633, %263
    %603:ci0 = FILTER0 %633, %265
    %19:ci64, $ign, $ign, %636:ci1 = SEQOTLTS64 -1, %14, 1
    %153:ci1 = NOT1 %636
    %309:ci0 = REPEATO0 %153, %307
    %319:ci64 = REPEATO64 %153, %317
    %327:ci64 = REPEATO64 %153, %325
    %335:ci64 = REPEATO64 %153, %333
    %343:ci64 = REPEATO64 %153, %341
    %351:ci64 = REPEATO64 %153, %349
    %359:ci64 = REPEATO64 %153, %357
    %367:ci64 = REPEATO64 %153, %365
    %375:ci64 = REPEATO64 %153, %373
    %383:ci64 = REPEATO64 %153, %381
    %391:ci64 = REPEATO64 %153, %389
    %405:ci64 = REPEATO64 %153, %403
    %413:ci64 = REPEATO64 %153, %411
    %421:ci64 = REPEATO64 %153, %419
    %429:ci64 = REPEATO64 %153, %427
    %437:ci64 = REPEATO64 %153, %435
    %445:ci64 = REPEATO64 %153, %443
    %453:ci64 = REPEATO64 %153, %451
    %461:ci64 = REPEATO64 %153, %459
    %469:ci64 = REPEATO64 %153, %467
    %477:ci64 = REPEATO64 %153, %475
    %485:ci64 = REPEATO64 %153, %49
    %491:ci64 = REPEATO64 %153, %51
    %497:ci64 = REPEATO64 %153, %53
    %503:ci64 = REPEATO64 %153, %55
    %509:ci64 = REPEATO64 %153, %57
    %515:ci64 = REPEATO64 %153, %59
    %521:ci64 = REPEATO64 %153, %61
    %527:ci64 = REPEATO64 %153, %63
    %533:ci64 = REPEATO64 %153, %65
    %539:ci64 = REPEATO64 %153, %67
    %545:ci64 = REPEATO64 %153, %69
    %551:ci64 = REPEATO64 %153, %71
    %560:ci0 = REPEATO0 %153, %558
    %565:ci0 = REPEATO0 %153, %563
    %570:ci0 = REPEATO0 %153, %568
    %575:ci0 = REPEATO0 %153, %573
    %580:ci0 = REPEATO0 %153, %578
    %585:ci0 = REPEATO0 %153, %583
    %590:ci0 = REPEATO0 %153, %588
    %595:ci0 = REPEATO0 %153, %593
    %600:ci0 = REPEATO0 %153, %598
    %605:ci0 = REPEATO0 %153, %603
    %155:ci64 = SLL64 %19, 3
    %156:ci64 = ADD64 %477, %155
    %157:ci64 = ADD64 %391, %155
    %158:ci64, $ign = LD64D killed %157, 8, 3, %309 :: (load 8 from %ir.scevgep551, !tbaa !3)
    %160:ci64 = ADD64 %383, %155
    %161:ci64, $ign = LD64D killed %160, 8, 3, %309 :: (load 8 from %ir.scevgep553, !tbaa !3)
    %163:ci64 = ADD64 %367, %155
    %164:ci64, $ign = LD64D killed %163, 8, 3, %309 :: (load 8 from %ir.scevgep557, !tbaa !3)
    %166:ci64 = ADD64 %375, %155
    %167:ci64, $ign = LD64D killed %166, 8, 3, %309 :: (load 8 from %ir.scevgep555, !tbaa !3)
    %169:ci64 = contract MULF64 %167, %491, 0
    %170:ci64 = contract FMAF64 %164, %485, killed %169, 0
    %171:ci64 = contract FMAF64 %161, %497, killed %170, 0
    %172:ci64 = contract FMAF64 %158, %503, killed %171, 0
    %173:ci64 = ADD64 %469, %155
    %174:ci64 = contract MULF64 %167, %515, 0
    %175:ci64 = contract FMAF64 %164, %509, killed %174, 0
    %176:ci64 = contract FMAF64 %161, %521, killed %175, 0
    %177:ci64 = contract FMAF64 %158, %527, killed %176, 0
    %178:ci64 = ADD64 %461, %155
    %179:ci64 = ADD64 %453, %155
    %180:ci64 = ADD64 %445, %155
    %181:ci64 = contract MULF64 %167, %539, 0
    %182:ci64 = contract FMAF64 %164, %533, killed %181, 0
    %183:ci64 = contract FMAF64 %161, %545, killed %182, 0
    %184:ci64 = contract FMAF64 %158, %551, killed %183, 0
    %185:ci64 = ADD64 %437, %155
    %186:ci64 = ADD64 %429, %155
    %187:ci64 = ADD64 %421, %155
    %188:ci64 = ADD64 %413, %155
    %189:ci64 = ADD64 %405, %155
    %190:ci64, $ign = LD64D %189, 8, 3, %560 :: (load 8 from %ir.scevgep549, !tbaa !3)
    %192:ci64 = contract FMAF64 %172, %319, %190, 0
    %271:ci0 = ST64D %189, 8, %192, 3, $ign :: (store 8 into %ir.scevgep549, !tbaa !3)
    %194:ci64, $ign = LD64D %188, 8, 3, %565 :: (load 8 from %ir.scevgep547, !tbaa !3)
    %196:ci64 = contract FMAF64 %172, %343, %194, 0
    %273:ci0 = ST64D %188, 8, %196, 3, $ign :: (store 8 into %ir.scevgep547, !tbaa !3)
    %198:ci64, $ign = LD64D %187, 8, 3, %570 :: (load 8 from %ir.scevgep545, !tbaa !3)
    %200:ci64 = contract FMAF64 %177, %327, %198, 0
    %275:ci0 = ST64D %187, 8, %200, 3, $ign :: (store 8 into %ir.scevgep545, !tbaa !3)
    %202:ci64, $ign = LD64D %186, 8, 3, %575 :: (load 8 from %ir.scevgep543, !tbaa !3)
    %204:ci64 = contract FMAF64 %172, %359, %202, 0
    %277:ci0 = ST64D %186, 8, %204, 3, $ign :: (store 8 into %ir.scevgep543, !tbaa !3)
    %206:ci64, $ign = LD64D %185, 8, 3, %580 :: (load 8 from %ir.scevgep541, !tbaa !3)
    %208:ci64 = contract FMAF64 %177, %351, %206, 0
    %279:ci0 = ST64D %185, 8, %208, 3, $ign :: (store 8 into %ir.scevgep541, !tbaa !3)
    %210:ci64, $ign = LD64D %180, 8, 3, %585 :: (load 8 from %ir.scevgep539, !tbaa !3)
    %212:ci64 = contract FMAF64 killed %184, %335, %210, 0
    %281:ci0 = ST64D %180, 8, %212, 3, $ign :: (store 8 into %ir.scevgep539, !tbaa !3)
    %214:ci64, $ign = LD64D %179, 8, 3, %590 :: (load 8 from %ir.scevgep537, !tbaa !3)
    %216:ci64 = contract FMAF64 %172, %327, %214, 0
    %283:ci0 = ST64D %179, 8, %216, 3, $ign :: (store 8 into %ir.scevgep537, !tbaa !3)
    %218:ci64, $ign = LD64D %178, 8, 3, %595 :: (load 8 from %ir.scevgep535, !tbaa !3)
    %220:ci64 = contract FMAF64 %172, %351, %218, 0
    %285:ci0 = ST64D %178, 8, %220, 3, $ign :: (store 8 into %ir.scevgep535, !tbaa !3)
    %222:ci64, $ign = LD64D %173, 8, 3, %600 :: (load 8 from %ir.scevgep533, !tbaa !3)
    %224:ci64 = contract FMAF64 %177, %335, %222, 0
    %287:ci0 = ST64D %173, 8, %224, 3, $ign :: (store 8 into %ir.scevgep533, !tbaa !3)
    %226:ci64, $ign = LD64D %156, 8, 3, %605 :: (load 8 from %ir.scevgep531, !tbaa !3)
    %228:ci64 = contract FMAF64 %172, %335, %226, 0
    %289:ci0 = ST64D %156, 8, %228, 3, $ign :: (store 8 into %ir.scevgep531, !tbaa !3)
    %608:ci0 = FILTER0 %636, %271
    %610:ci0 = FILTER0 %636, %273
    %612:ci0 = FILTER0 %636, %275
    %614:ci0 = FILTER0 %636, %277
    %616:ci0 = FILTER0 %636, %279
    %618:ci0 = FILTER0 %636, %281
    %620:ci0 = FILTER0 %636, %283
    %622:ci0 = FILTER0 %636, %285
    %624:ci0 = FILTER0 %636, %287
    %626:ci0 = FILTER0 %636, %289
    %291:ci0 = ALL0 %608, %610, %612, %614
    %292:ci0 = ALL0 %616, %618, %620, %622
    %290:ci0 = ALL0 %291, %292, %624, %626
    %293:ci0 = PICK0 %47, 0, %290
    %294:ci0 = ALL0 %21, %293, $ign, $ign
    %22:ci0 = MOV0 %294
    RET

...
